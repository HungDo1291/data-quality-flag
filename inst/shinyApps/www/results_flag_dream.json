{"startTimestamp":["2020-08-03 22:24:26"],"endTimestamp":["2020-08-03 22:27:15"],"executionTime":["3 mins"],"CheckResults":[{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":1,"FAILED":0,"_row":"1.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"gender_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":2,"FAILED":0,"_row":"1.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078054 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = year_of_birth\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"year_of_birth\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":3,"FAILED":0,"_row":"1.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078136 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = month_of_birth\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"month_of_birth\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":4,"FAILED":0,"_row":"1.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = day_of_birth\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"day_of_birth\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":5,"FAILED":0,"_row":"1.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = birth_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"birth_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":6,"FAILED":0,"_row":"1.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078122 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"race_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":7,"FAILED":0,"_row":"1.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078121 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"ethnicity_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":8,"FAILED":0,"_row":"1.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = location_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"location_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":9,"FAILED":0,"_row":"1.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078135 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":10,"FAILED":0,"_row":"1.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093779 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = care_site_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"care_site_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":11,"FAILED":0,"_row":"1.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = person_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":12,"FAILED":0,"_row":"1.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093699 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"gender_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":13,"FAILED":0,"_row":"1.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109376 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"gender_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":14,"FAILED":0,"_row":"1.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093751 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"race_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":15,"FAILED":0,"_row":"1.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"race_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":16,"FAILED":0,"_row":"1.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"ethnicity_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":17,"FAILED":0,"_row":"1.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"ethnicity_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PERSON cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PERSON table as expected based on the specification. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":18,"FAILED":0,"_row":"1.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_period_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":19,"FAILED":0,"_row":"1.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078088 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":20,"FAILED":0,"_row":"1.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_start_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_period_start_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":21,"FAILED":0,"_row":"1.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062470 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_period_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":22,"FAILED":0,"_row":"1.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062523 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = period_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"period_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":23,"FAILED":0,"_row":"1.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062473 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":24,"FAILED":0,"_row":"1.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062525 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":25,"FAILED":0,"_row":"1.25"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":26,"FAILED":0,"_row":"1.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_start_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":27,"FAILED":0,"_row":"1.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062474 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_start_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":28,"FAILED":0,"_row":"1.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":29,"FAILED":0,"_row":"1.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_end_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":30,"FAILED":0,"_row":"1.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":31,"FAILED":0,"_row":"1.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062432 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":32,"FAILED":0,"_row":"1.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062458 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = care_site_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"care_site_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":33,"FAILED":0,"_row":"1.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":34,"FAILED":0,"_row":"1.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062538 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":35,"FAILED":0,"_row":"1.35"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"admitting_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"admitting_source_concept_id\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":36,"FAILED":1,"_row":"1.36"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"admitting_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"admitting_source_value\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_VISIT_OCCURRENCE_admitting_source_value.txt","checkId":37,"FAILED":1,"_row":"1.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"discharge_to_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":38,"FAILED":0,"_row":"1.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078134 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"discharge_to_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":39,"FAILED":0,"_row":"1.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = preceding_visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"preceding_visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":40,"FAILED":0,"_row":"1.40"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078156 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":41,"FAILED":0,"_row":"1.41"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109374 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":42,"FAILED":0,"_row":"1.42"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078134 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":43,"FAILED":0,"_row":"1.43"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062474 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_start_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":44,"FAILED":0,"_row":"1.44"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078134 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_start_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":45,"FAILED":0,"_row":"1.45"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":46,"FAILED":0,"_row":"1.46"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078134 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_end_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":47,"FAILED":0,"_row":"1.47"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":48,"FAILED":0,"_row":"1.48"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_status_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":49,"FAILED":0,"_row":"1.49"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078150 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = stop_reason\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"stop_reason\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":50,"FAILED":0,"_row":"1.50"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":51,"FAILED":0,"_row":"1.51"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":52,"FAILED":0,"_row":"1.52"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":53,"FAILED":0,"_row":"1.53"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078132 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":54,"FAILED":0,"_row":"1.54"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078118 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":55,"FAILED":0,"_row":"1.55"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"condition_status_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CONDITION_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CONDITION_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":56,"FAILED":0,"_row":"1.56"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109391 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_exposure_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":57,"FAILED":0,"_row":"1.57"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":58,"FAILED":0,"_row":"1.58"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093755 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":59,"FAILED":0,"_row":"1.59"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093746 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_exposure_start_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":60,"FAILED":0,"_row":"1.60"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093797 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_exposure_start_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":61,"FAILED":0,"_row":"1.61"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093755 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_exposure_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":62,"FAILED":0,"_row":"1.62"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109365 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_exposure_end_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":63,"FAILED":0,"_row":"1.63"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = verbatim_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"verbatim_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":64,"FAILED":0,"_row":"1.64"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109384 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":65,"FAILED":0,"_row":"1.65"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = stop_reason\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"stop_reason\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":66,"FAILED":0,"_row":"1.66"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109373 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = refills\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"refills\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":67,"FAILED":0,"_row":"1.67"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = quantity\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"quantity\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":68,"FAILED":0,"_row":"1.68"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093776 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = days_supply\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"days_supply\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":69,"FAILED":0,"_row":"1.69"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109366 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = sig\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"sig\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"sig","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":70,"FAILED":0,"_row":"1.70"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109375 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"route_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":71,"FAILED":0,"_row":"1.71"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109430 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = lot_number\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"lot_number\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"lot_number","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":72,"FAILED":0,"_row":"1.72"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109377 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":73,"FAILED":0,"_row":"1.73"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109376 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":74,"FAILED":0,"_row":"1.74"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109368 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":75,"FAILED":0,"_row":"1.75"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109380 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":76,"FAILED":0,"_row":"1.76"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109380 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drug_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":77,"FAILED":0,"_row":"1.77"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109423 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"route_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":78,"FAILED":0,"_row":"1.78"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.109357 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = dose_unit_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"dose_unit_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DRUG_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DRUG_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"dose_unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":79,"FAILED":0,"_row":"1.79"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078132 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"procedure_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":80,"FAILED":0,"_row":"1.80"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":81,"FAILED":0,"_row":"1.81"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"procedure_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":82,"FAILED":0,"_row":"1.82"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062524 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"procedure_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":83,"FAILED":0,"_row":"1.83"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078072 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"procedure_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":84,"FAILED":0,"_row":"1.84"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"procedure_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":85,"FAILED":0,"_row":"1.85"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"modifier_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":86,"FAILED":0,"_row":"1.86"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = quantity\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"quantity\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":87,"FAILED":0,"_row":"1.87"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":88,"FAILED":0,"_row":"1.88"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":89,"FAILED":0,"_row":"1.89"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":90,"FAILED":0,"_row":"1.90"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"procedure_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":91,"FAILED":0,"_row":"1.91"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"procedure_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":92,"FAILED":0,"_row":"1.92"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062474 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"modifier_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROCEDURE_OCCURRENCE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROCEDURE_OCCURRENCE table as expected based on the specification. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":93,"FAILED":0,"_row":"1.93"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_exposure_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":94,"FAILED":0,"_row":"1.94"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":95,"FAILED":0,"_row":"1.95"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062512 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":96,"FAILED":0,"_row":"1.96"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_exposure_start_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":97,"FAILED":0,"_row":"1.97"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062531 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_exposure_start_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":98,"FAILED":0,"_row":"1.98"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062465 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_exposure_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":99,"FAILED":0,"_row":"1.99"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078134 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_exposure_end_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":100,"FAILED":0,"_row":"1.100"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062520 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":101,"FAILED":0,"_row":"1.101"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062553 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = unique_device_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"unique_device_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"unique_device_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":102,"FAILED":0,"_row":"1.102"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062522 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = quantity\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"quantity\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":103,"FAILED":0,"_row":"1.103"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":104,"FAILED":0,"_row":"1.104"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":105,"FAILED":0,"_row":"1.105"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062449 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":106,"FAILED":0,"_row":"1.106"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.046849 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":107,"FAILED":0,"_row":"1.107"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062472 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"device_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.DEVICE_EXPOSURE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the DEVICE_EXPOSURE table as expected based on the specification. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":108,"FAILED":0,"_row":"1.108"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078151 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":109,"FAILED":0,"_row":"1.109"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":110,"FAILED":0,"_row":"1.110"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":111,"FAILED":0,"_row":"1.111"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062472 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":112,"FAILED":0,"_row":"1.112"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062522 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":113,"FAILED":0,"_row":"1.113"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_time\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_time\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_time","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":114,"FAILED":0,"_row":"1.114"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":115,"FAILED":0,"_row":"1.115"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = operator_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"operator_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":116,"FAILED":0,"_row":"1.116"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078131 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_as_number\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"value_as_number\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":117,"FAILED":0,"_row":"1.117"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093747 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_as_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"value_as_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":118,"FAILED":0,"_row":"1.118"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078134 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"unit_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":119,"FAILED":0,"_row":"1.119"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078122 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = range_low\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"range_low\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_low","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":120,"FAILED":0,"_row":"1.120"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078099 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = range_high\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"range_high\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_high","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":121,"FAILED":0,"_row":"1.121"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078151 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":122,"FAILED":0,"_row":"1.122"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":123,"FAILED":0,"_row":"1.123"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078159 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":124,"FAILED":0,"_row":"1.124"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":125,"FAILED":0,"_row":"1.125"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093772 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"measurement_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":126,"FAILED":0,"_row":"1.126"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"unit_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":127,"FAILED":0,"_row":"1.127"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"value_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.MEASUREMENT cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the MEASUREMENT table as expected based on the specification. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":128,"FAILED":0,"_row":"1.128"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":129,"FAILED":0,"_row":"1.129"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062527 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":130,"FAILED":0,"_row":"1.130"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":131,"FAILED":0,"_row":"1.131"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_start_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":132,"FAILED":0,"_row":"1.132"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062534 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_start_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":133,"FAILED":0,"_row":"1.133"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062461 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":134,"FAILED":0,"_row":"1.134"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_end_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":135,"FAILED":0,"_row":"1.135"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.046873 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":136,"FAILED":0,"_row":"1.136"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062427 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":137,"FAILED":0,"_row":"1.137"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093803 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = care_site_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"care_site_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":138,"FAILED":0,"_row":"1.138"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":139,"FAILED":0,"_row":"1.139"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":140,"FAILED":0,"_row":"1.140"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"admitting_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"admitting_source_value\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_VISIT_DETAIL_admitting_source_value.txt","checkId":141,"FAILED":1,"_row":"1.141"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"admitting_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"admitting_source_concept_id\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_VISIT_DETAIL_admitting_source_concept_id.txt","checkId":142,"FAILED":1,"_row":"1.142"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062485 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"discharge_to_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":143,"FAILED":0,"_row":"1.143"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"discharge_to_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":144,"FAILED":0,"_row":"1.144"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = preceding_visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"preceding_visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"preceding_visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":145,"FAILED":0,"_row":"1.145"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_parent_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_parent_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_parent_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":146,"FAILED":0,"_row":"1.146"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078089 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.VISIT_DETAIL cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the VISIT_DETAIL table as expected based on the specification. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":147,"FAILED":0,"_row":"1.147"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062490 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":148,"FAILED":0,"_row":"1.148"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":149,"FAILED":0,"_row":"1.149"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":150,"FAILED":0,"_row":"1.150"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":151,"FAILED":0,"_row":"1.151"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":152,"FAILED":0,"_row":"1.152"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062512 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_class_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_class_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":153,"FAILED":0,"_row":"1.153"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078091 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_title\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_title\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_title","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":154,"FAILED":0,"_row":"1.154"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_text\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_text\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_text","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":155,"FAILED":0,"_row":"1.155"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = encoding_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"encoding_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":156,"FAILED":0,"_row":"1.156"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062490 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = language_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"language_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":157,"FAILED":0,"_row":"1.157"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062488 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":158,"FAILED":0,"_row":"1.158"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":159,"FAILED":0,"_row":"1.159"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":160,"FAILED":0,"_row":"1.160"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":161,"FAILED":0,"_row":"1.161"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_nlp_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":162,"FAILED":0,"_row":"1.162"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":163,"FAILED":0,"_row":"1.163"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = section_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"section_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":164,"FAILED":0,"_row":"1.164"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = snippet\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"snippet\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"snippet","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":165,"FAILED":0,"_row":"1.165"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062513 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = offset\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"offset\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"offset","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":166,"FAILED":0,"_row":"1.166"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = lexical_variant\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"lexical_variant\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"lexical_variant","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":167,"FAILED":0,"_row":"1.167"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_nlp_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":168,"FAILED":0,"_row":"1.168"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"note_nlp_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":169,"FAILED":0,"_row":"1.169"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062462 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_system\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"nlp_system\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_system","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":170,"FAILED":0,"_row":"1.170"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078139 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"nlp_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":171,"FAILED":0,"_row":"1.171"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"nlp_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":172,"FAILED":0,"_row":"1.172"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078089 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = term_exists\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"term_exists\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_exists","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":173,"FAILED":0,"_row":"1.173"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = term_temporal\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"term_temporal\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_temporal","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":174,"FAILED":0,"_row":"1.174"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = term_modifiers\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"term_modifiers\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.NOTE_NLP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the NOTE_NLP table as expected based on the specification. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_modifiers","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":175,"FAILED":0,"_row":"1.175"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062474 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":176,"FAILED":0,"_row":"1.176"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062557 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":177,"FAILED":0,"_row":"1.177"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":178,"FAILED":0,"_row":"1.178"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":179,"FAILED":0,"_row":"1.179"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":180,"FAILED":0,"_row":"1.180"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":181,"FAILED":0,"_row":"1.181"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062540 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = value_as_number\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"value_as_number\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":182,"FAILED":0,"_row":"1.182"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062482 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = value_as_string\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"value_as_string\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_string","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":183,"FAILED":0,"_row":"1.183"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = value_as_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"value_as_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":184,"FAILED":0,"_row":"1.184"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"qualifier_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":185,"FAILED":0,"_row":"1.185"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062533 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"unit_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":186,"FAILED":0,"_row":"1.186"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":187,"FAILED":0,"_row":"1.187"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_occurrence_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_occurrence_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":188,"FAILED":0,"_row":"1.188"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078127 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_detail_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"visit_detail_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":189,"FAILED":0,"_row":"1.189"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":190,"FAILED":0,"_row":"1.190"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"observation_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":191,"FAILED":0,"_row":"1.191"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"unit_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":192,"FAILED":0,"_row":"1.192"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.046872 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"qualifier_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.OBSERVATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the OBSERVATION table as expected based on the specification. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":193,"FAILED":0,"_row":"1.193"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specimen_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":194,"FAILED":0,"_row":"1.194"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062388 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":195,"FAILED":0,"_row":"1.195"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.046874 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specimen_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":196,"FAILED":0,"_row":"1.196"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specimen_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":197,"FAILED":0,"_row":"1.197"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specimen_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":198,"FAILED":0,"_row":"1.198"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062417 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_datetime\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specimen_datetime\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":199,"FAILED":0,"_row":"1.199"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = quantity\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"quantity\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":200,"FAILED":0,"_row":"1.200"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"unit_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":201,"FAILED":0,"_row":"1.201"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"anatomic_site_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":202,"FAILED":0,"_row":"1.202"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062544 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"disease_status_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":203,"FAILED":0,"_row":"1.203"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_source_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specimen_source_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":204,"FAILED":0,"_row":"1.204"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specimen_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":205,"FAILED":0,"_row":"1.205"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062412 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"unit_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":206,"FAILED":0,"_row":"1.206"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062350 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"anatomic_site_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":207,"FAILED":0,"_row":"1.207"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078106 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"disease_status_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.SPECIMEN cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the SPECIMEN table as expected based on the specification. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":208,"FAILED":0,"_row":"1.208"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_1\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"domain_concept_id_1\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.FACT_RELATIONSHIP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":209,"FAILED":0,"_row":"1.209"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_1\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"fact_id_1\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.FACT_RELATIONSHIP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":210,"FAILED":0,"_row":"1.210"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062492 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_2\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"domain_concept_id_2\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.FACT_RELATIONSHIP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":211,"FAILED":0,"_row":"1.211"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_2\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"fact_id_2\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.FACT_RELATIONSHIP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":212,"FAILED":0,"_row":"1.212"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = relationship_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"relationship_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.FACT_RELATIONSHIP cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the FACT_RELATIONSHIP table as expected based on the specification. ","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":213,"FAILED":0,"_row":"1.213"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062484 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = location_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"location_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":214,"FAILED":0,"_row":"1.214"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = address_1\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"address_1\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_1","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":215,"FAILED":0,"_row":"1.215"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062516 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = address_2\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"address_2\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_2","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":216,"FAILED":0,"_row":"1.216"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062465 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = city\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"city\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"city","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":217,"FAILED":0,"_row":"1.217"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062516 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = state\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"state\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"state","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":218,"FAILED":0,"_row":"1.218"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062409 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = zip\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"zip\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"zip","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":219,"FAILED":0,"_row":"1.219"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062527 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = county\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"county\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"county","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":220,"FAILED":0,"_row":"1.220"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062508 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = location_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"location_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.LOCATION cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the LOCATION table as expected based on the specification. ","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":221,"FAILED":0,"_row":"1.221"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"care_site_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CARE_SITE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":222,"FAILED":0,"_row":"1.222"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062527 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_name\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"care_site_name\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CARE_SITE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_name","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":223,"FAILED":0,"_row":"1.223"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"place_of_service_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CARE_SITE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":224,"FAILED":0,"_row":"1.224"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = location_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"location_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CARE_SITE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":225,"FAILED":0,"_row":"1.225"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062511 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"care_site_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CARE_SITE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":226,"FAILED":0,"_row":"1.226"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"place_of_service_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.CARE_SITE cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the CARE_SITE table as expected based on the specification. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":227,"FAILED":0,"_row":"1.227"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":228,"FAILED":0,"_row":"1.228"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062477 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_name\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_name\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_name","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":229,"FAILED":0,"_row":"1.229"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = npi\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"npi\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"npi","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":230,"FAILED":0,"_row":"1.230"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = dea\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"dea\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"dea","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":231,"FAILED":0,"_row":"1.231"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.046875 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specialty_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":232,"FAILED":0,"_row":"1.232"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = care_site_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"care_site_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":233,"FAILED":0,"_row":"1.233"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = year_of_birth\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"year_of_birth\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":234,"FAILED":0,"_row":"1.234"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"gender_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":235,"FAILED":0,"_row":"1.235"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"provider_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":236,"FAILED":0,"_row":"1.236"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specialty_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":237,"FAILED":0,"_row":"1.237"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078132 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"specialty_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":238,"FAILED":0,"_row":"1.238"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062512 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"gender_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":239,"FAILED":0,"_row":"1.239"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"gender_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PROVIDER cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PROVIDER table as expected based on the specification. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":240,"FAILED":0,"_row":"1.240"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062453 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"payer_plan_period_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":241,"FAILED":0,"_row":"1.241"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = person_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"person_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":242,"FAILED":0,"_row":"1.242"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.093755 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_start_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"payer_plan_period_start_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_start_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":243,"FAILED":0,"_row":"1.243"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062488 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_end_date\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"payer_plan_period_end_date\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_end_date","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":244,"FAILED":0,"_row":"1.244"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"payer_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":245,"FAILED":0,"_row":"1.245"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"payer_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":246,"FAILED":0,"_row":"1.246"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"payer_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":247,"FAILED":0,"_row":"1.247"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"plan_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":248,"FAILED":0,"_row":"1.248"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"plan_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":249,"FAILED":0,"_row":"1.249"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062460 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"plan_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":250,"FAILED":0,"_row":"1.250"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062533 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"sponsor_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":251,"FAILED":0,"_row":"1.251"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"sponsor_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":252,"FAILED":0,"_row":"1.252"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062458 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"sponsor_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":253,"FAILED":0,"_row":"1.253"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = family_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"family_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"family_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":254,"FAILED":0,"_row":"1.254"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"stop_reason_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":255,"FAILED":0,"_row":"1.255"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"stop_reason_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":256,"FAILED":0,"_row":"1.256"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_source_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"stop_reason_source_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.PAYER_PLAN_PERIOD cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the PAYER_PLAN_PERIOD table as expected based on the specification. ","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":257,"FAILED":0,"_row":"1.257"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062532 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"cost_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":258,"FAILED":0,"_row":"1.258"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_event_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"cost_event_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_event_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":259,"FAILED":0,"_row":"1.259"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_domain_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"cost_domain_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"cost_domain_id\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_cost_domain_id.txt","checkId":260,"FAILED":1,"_row":"1.260"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062534 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_type_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"cost_type_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":261,"FAILED":0,"_row":"1.261"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062530 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = currency_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"currency_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":262,"FAILED":0,"_row":"1.262"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = total_charge\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"total_charge\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_charge","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"total_charge\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_total_charge.txt","checkId":263,"FAILED":1,"_row":"1.263"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = total_cost\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"total_cost\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_cost","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"total_cost\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_total_cost.txt","checkId":264,"FAILED":1,"_row":"1.264"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = total_paid\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"total_paid\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_paid","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"total_paid\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_total_paid.txt","checkId":265,"FAILED":1,"_row":"1.265"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_by_payer\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_by_payer\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_payer","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_by_payer\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_by_payer.txt","checkId":266,"FAILED":1,"_row":"1.266"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_by_patient\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_by_patient\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_patient","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_by_patient\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_by_patient.txt","checkId":267,"FAILED":1,"_row":"1.267"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_patient_copay\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_patient_copay\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_copay","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_patient_copay\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_patient_copay.txt","checkId":268,"FAILED":1,"_row":"1.268"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_patient_coinsurance\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_patient_coinsurance\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_coinsurance","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_patient_coinsurance\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_patient_coinsurance.txt","checkId":269,"FAILED":1,"_row":"1.269"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_patient_deductible\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_patient_deductible\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_deductible","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_patient_deductible\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_patient_deductible.txt","checkId":270,"FAILED":1,"_row":"1.270"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_by_primary\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_by_primary\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_primary","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_by_primary\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_by_primary.txt","checkId":271,"FAILED":1,"_row":"1.271"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_ingredient_cost\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_ingredient_cost\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_ingredient_cost","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_ingredient_cost\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_ingredient_cost.txt","checkId":272,"FAILED":1,"_row":"1.272"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_dispensing_fee\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"paid_dispensing_fee\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_dispensing_fee","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"paid_dispensing_fee\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_paid_dispensing_fee.txt","checkId":273,"FAILED":1,"_row":"1.273"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = payer_plan_period_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"payer_plan_period_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":274,"FAILED":0,"_row":"1.274"},{"QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = amount_allowed\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"amount_allowed\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"amount_allowed","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column \"amount_allowed\" does not exist\n  Position: 267\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmField_COST_amount_allowed.txt","checkId":275,"FAILED":1,"_row":"1.275"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062532 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = revenue_code_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"revenue_code_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":276,"FAILED":0,"_row":"1.276"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062461 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = revenue_code_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"revenue_code_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":277,"FAILED":0,"_row":"1.277"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = drg_concept_id\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drg_concept_id\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":278,"FAILED":0,"_row":"1.278"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062487 secs","QUERY_TEXT":"\n/*********\nFIELD LEVEL check:\nCDM_FIELD - verify the field exists\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = drg_source_value\n\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n  select num_violated_rows from\n  (\n    select\n      case when COUNT(\"drg_source_value\") = 0 then 0\n      else 0\n    end as num_violated_rows\n    from public.COST cdmTable\n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT 1 as num_rows\n) denominator\n;","CHECK_NAME":"cdmField","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if all fields are present in the COST table as expected based on the specification. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_source_value","SQL_FILE":"field_cdm_field.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":279,"FAILED":0,"_row":"1.279"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078135 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":280,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078078 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE cdmTable.gender_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":281,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078167 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = year_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE cdmTable.year_of_birth IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":282,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE cdmTable.race_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_concept_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":283,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093752 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE cdmTable.ethnicity_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_concept_id of the PERSON that is considered not nullable.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":284,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE cdmTable.observation_period_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":285,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":286,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE cdmTable.observation_period_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_start_date of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":287,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE cdmTable.observation_period_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_end_date of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":288,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.046894 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = period_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE cdmTable.period_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the period_type_concept_id of the OBSERVATION_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":289,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":290,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":291,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.visit_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_concept_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":292,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.13"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062515 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.visit_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_date of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":293,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.14"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078117 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.visit_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_date of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":294,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.visit_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_type_concept_id of the VISIT_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":295,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.condition_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":296,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093751 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":297,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.condition_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":298,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.19"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093752 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.condition_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_date of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":299,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093708 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.condition_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_type_concept_id of the CONDITION_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":300,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.109374 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE cdmTable.drug_exposure_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":301,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.109402 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":302,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125004 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE cdmTable.drug_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":303,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.24"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125003 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE cdmTable.drug_exposure_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_date of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":304,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.25"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124999 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE cdmTable.drug_exposure_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_date of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":305,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125000 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE cdmTable.drug_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_type_concept_id of the DRUG_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":306,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078135 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.procedure_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_occurrence_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":307,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":308,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.procedure_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_concept_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":309,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.30"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062467 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.procedure_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_date of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":310,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062483 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.procedure_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_type_concept_id of the PROCEDURE_OCCURRENCE that is considered not nullable.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":311,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062490 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE cdmTable.device_exposure_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":312,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093746 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":313,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078157 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE cdmTable.device_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_concept_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":314,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.35"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE cdmTable.device_exposure_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_date of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":315,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.36"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE cdmTable.device_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_type_concept_id of the DEVICE_EXPOSURE that is considered not nullable.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":316,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE cdmTable.measurement_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":317,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093702 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":318,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE cdmTable.measurement_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_concept_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":319,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.40"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093756 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE cdmTable.measurement_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_date of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":320,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.41"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE cdmTable.measurement_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_type_concept_id of the MEASUREMENT that is considered not nullable.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":321,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.42"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":322,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.43"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":323,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.44"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078114 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.visit_detail_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_concept_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":324,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.45"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.visit_detail_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_date of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":325,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.46"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.visit_detail_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_date of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":326,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.47"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.visit_detail_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_type_concept_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":327,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.48"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062435 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_DETAIL that is considered not nullable.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":328,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.49"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062523 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.note_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":329,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.50"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":330,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.51"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_date' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.note_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_date of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":331,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.52"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.note_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_type_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":332,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.53"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_class_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.note_class_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_class_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":333,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.54"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_text\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_text' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.note_text IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_text of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_text","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":334,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.55"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062523 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = encoding_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.encoding_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the encoding_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":335,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.56"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = language_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.language_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the language_concept_id of the NOTE that is considered not nullable.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":336,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.57"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE cdmTable.note_nlp_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_id of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":337,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.58"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE cdmTable.note_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":338,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.59"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078111 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = lexical_variant\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.lexical_variant' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE cdmTable.lexical_variant IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lexical_variant of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"lexical_variant","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":339,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.60"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062438 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.nlp_date' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE cdmTable.nlp_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_date of the NOTE_NLP that is considered not nullable.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":340,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.61"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE cdmTable.observation_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":341,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.62"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":342,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.63"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE cdmTable.observation_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_concept_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":343,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.64"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE cdmTable.observation_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_date of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":344,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.65"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE cdmTable.observation_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_type_concept_id of the OBSERVATION that is considered not nullable.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":345,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.66"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE cdmTable.specimen_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":346,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.67"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":347,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.68"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE cdmTable.specimen_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_concept_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":348,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.69"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE cdmTable.specimen_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_type_concept_id of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":349,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.70"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE cdmTable.specimen_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_date of the SPECIMEN that is considered not nullable.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":350,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.71"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078084 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_1\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE cdmTable.domain_concept_id_1 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_1 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":351,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.72"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_1\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE cdmTable.fact_id_1 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_1 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":352,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.73"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062473 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_2\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE cdmTable.domain_concept_id_2 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_2 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":353,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.74"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062449 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_2\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE cdmTable.fact_id_2 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_2 of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":354,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.75"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = relationship_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE cdmTable.relationship_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the relationship_concept_id of the FACT_RELATIONSHIP that is considered not nullable.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":355,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.76"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.location_id' AS violating_field, cdmTable.* \n\t\t  FROM public.LOCATION cdmTable\n\t\t WHERE cdmTable.location_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the LOCATION that is considered not nullable.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":356,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.77"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CARE_SITE cdmTable\n\t\t WHERE cdmTable.care_site_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the CARE_SITE that is considered not nullable.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":357,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.78"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062569 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROVIDER that is considered not nullable.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":358,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.79"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093752 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE cdmTable.payer_plan_period_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":359,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.80"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":360,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.81"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_start_date' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE cdmTable.payer_plan_period_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_start_date of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_start_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":361,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.82"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062455 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE cdmTable.payer_plan_period_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_end_date of the PAYER_PLAN_PERIOD that is considered not nullable.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_end_date","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":362,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.83"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE cdmTable.cost_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":363,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.84"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_event_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_event_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE cdmTable.cost_event_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_event_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_event_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":364,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.85"},{"QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_domain_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE cdmTable.cost_domain_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_domain_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.cost_domain_id does not exist\n  Position: 376\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_isRequired_COST_cost_domain_id.txt","checkId":365,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"2.86"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_NOT_NULLABLE\n\nFor each table, check that the fields in which IS_NOT_NULLABLE == TRUE, there are no null values in that field.\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE cdmTable.cost_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isRequired","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_type_concept_id of the COST that is considered not nullable.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_is_not_nullable.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Validation","checkId":366,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"2.87"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.140611 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":367,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.156241 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.gender_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.gender_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":368,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.156247 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = year_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.year_of_birth) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.year_of_birth IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the year_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":369,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.140590 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = month_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.month_of_birth) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.month_of_birth IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the month_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":370,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078114 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = day_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.day_of_birth) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.day_of_birth IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the day_of_birth in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":371,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.156238 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.race_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.race_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the race_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":372,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.218751 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.ethnicity_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.ethnicity_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the ethnicity_concept_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":373,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093751 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.location_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.location_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.location_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":374,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093759 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":375,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093757 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.care_site_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.care_site_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the PERSON is the expected data type based on the specification.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":376,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078101 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.observation_period_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.observation_period_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_period_id in the OBSERVATION_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":377,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the OBSERVATION_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":378,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":379,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":380,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078132 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":381,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":382,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.care_site_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.care_site_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.care_site_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":383,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078131 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_source_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":384,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.18"},{"QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.admitting_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.admitting_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the admitting_source_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 433\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_cdmDatatype_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":385,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"3.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.discharge_to_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.discharge_to_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the discharge_to_concept_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":386,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = preceding_visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.preceding_visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.preceding_visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the preceding_visit_occurrence_id in the VISIT_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":387,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.140580 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.condition_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.condition_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":388,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.140635 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.condition_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.condition_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_type_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":389,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.140694 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.condition_status_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.condition_status_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_status_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":390,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078127 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":391,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.25"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.140631 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":392,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":393,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.156270 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.condition_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.condition_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the condition_source_concept_id in the CONDITION_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":394,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.250015 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.drug_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.drug_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":395,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.281248 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.drug_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.drug_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_type_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":396,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124995 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = refills\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.refills) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.refills IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the refills in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":397,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125013 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = days_supply\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.days_supply) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.days_supply IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the days_supply in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":398,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.265583 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.route_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.route_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the route_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":399,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124995 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":400,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.312502 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":401,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.35"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140577 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":402,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.36"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.265584 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.drug_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.drug_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drug_source_concept_id in the DRUG_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":403,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.procedure_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.procedure_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_occurrence_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":404,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":405,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.procedure_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.procedure_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":406,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.40"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.procedure_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.procedure_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_type_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":407,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.41"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.modifier_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.modifier_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the modifier_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":408,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.42"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062528 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = quantity\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.quantity) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.quantity IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the quantity in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":409,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.43"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":410,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.44"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":411,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.45"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078101 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":412,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.46"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062508 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.procedure_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.procedure_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the procedure_source_concept_id in the PROCEDURE_OCCURRENCE is the expected data type based on the specification.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":413,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.47"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.device_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.device_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":414,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.48"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.device_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.device_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_type_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":415,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.49"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = quantity\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.quantity) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.quantity IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the quantity in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":416,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.50"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062524 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":417,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.51"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093721 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":418,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.52"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":419,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.53"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.device_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.device_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the device_source_concept_id in the DEVICE_EXPOSURE is the expected data type based on the specification.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":420,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.54"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.140635 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.measurement_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.measurement_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":421,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.55"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.156257 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":422,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.56"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.140626 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.measurement_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.measurement_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":423,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.57"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.140622 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.measurement_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.measurement_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_type_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":424,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.58"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = operator_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.operator_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.operator_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the operator_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":425,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.59"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093794 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_as_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.value_as_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.value_as_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the value_as_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":426,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.60"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.156220 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.unit_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.unit_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":427,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.61"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093752 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":428,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.62"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.187459 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":429,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.63"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093737 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":430,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.64"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.171871 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.measurement_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.measurement_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the measurement_source_concept_id in the MEASUREMENT is the expected data type based on the specification.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":431,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.65"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.093752 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":432,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.66"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078152 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":433,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.67"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078118 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_concept_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":434,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.68"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":435,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.69"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.care_site_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.care_site_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the VISIT_DETAIL is the expected data type based on the specification.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":436,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.70"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.note_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.note_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":437,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.71"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":438,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.72"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062492 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.note_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.note_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_type_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":439,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.73"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062486 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_class_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.note_class_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.note_class_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_class_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":440,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.74"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062525 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = encoding_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.encoding_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.encoding_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the encoding_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":441,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.75"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062526 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = language_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.language_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.language_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the language_concept_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":442,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.76"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":443,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.77"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062513 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":444,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.78"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the NOTE is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":445,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.79"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.note_nlp_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.note_nlp_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":446,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.80"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093754 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.note_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.note_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":447,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.81"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062488 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = section_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.section_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.section_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the section_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":448,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.82"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.note_nlp_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.note_nlp_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":449,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.83"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062456 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.note_nlp_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.note_nlp_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the note_nlp_source_concept_id in the NOTE_NLP is the expected data type based on the specification.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":450,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.84"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.observation_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.observation_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":451,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.85"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":452,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.86"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.observation_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.observation_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":453,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.87"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.078133 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.observation_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.observation_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_type_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":454,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.88"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062549 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.qualifier_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.qualifier_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the qualifier_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":455,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.89"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062489 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.unit_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.unit_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":456,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.90"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":457,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.91"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_occurrence_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_occurrence_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_occurrence_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":458,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.92"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.078136 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.visit_detail_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.visit_detail_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the visit_detail_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":459,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.93"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.observation_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.observation_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the observation_source_concept_id in the OBSERVATION is the expected data type based on the specification.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":460,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.94"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062487 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.specimen_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.specimen_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":461,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.95"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":462,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.96"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.specimen_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.specimen_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":463,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.97"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093723 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.specimen_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.specimen_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specimen_type_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":464,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.98"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.unit_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.unit_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the unit_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":465,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.99"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062524 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.anatomic_site_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.anatomic_site_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the anatomic_site_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":466,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.100"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078071 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.disease_status_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.disease_status_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the disease_status_concept_id in the SPECIMEN is the expected data type based on the specification.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":467,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.101"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_1\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.domain_concept_id_1) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.domain_concept_id_1 IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the domain_concept_id_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":468,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.102"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_1\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.fact_id_1) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.fact_id_1 IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the fact_id_1 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":469,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.103"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062464 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_2\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.domain_concept_id_2) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.domain_concept_id_2 IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the domain_concept_id_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":470,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.104"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_2\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.fact_id_2) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.fact_id_2 IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the fact_id_2 in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":471,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.105"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062425 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = relationship_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.FACT_RELATIONSHIP cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.relationship_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.relationship_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the relationship_concept_id in the FACT_RELATIONSHIP is the expected data type based on the specification.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":472,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.106"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.location_id' AS violating_field, cdmTable.* \n\t\t  FROM public.LOCATION cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.location_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.location_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the LOCATION is the expected data type based on the specification.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":473,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.107"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078149 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CARE_SITE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.care_site_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.care_site_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":474,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.108"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078104 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CARE_SITE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.place_of_service_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.place_of_service_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the place_of_service_concept_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":475,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.109"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078132 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.location_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CARE_SITE cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.location_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.location_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the location_id in the CARE_SITE is the expected data type based on the specification.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":476,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.110"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.provider_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.provider_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the provider_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":477,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.111"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.specialty_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.specialty_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specialty_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":478,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.112"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.care_site_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.care_site_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the care_site_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":479,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.113"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062468 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = year_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.year_of_birth' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.year_of_birth) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.year_of_birth IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the year_of_birth in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":480,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.114"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.gender_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.gender_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":481,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.115"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.specialty_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.specialty_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the specialty_source_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":482,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.116"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062475 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.gender_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.gender_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the gender_source_concept_id in the PROVIDER is the expected data type based on the specification.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":483,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.117"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.payer_plan_period_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.payer_plan_period_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_plan_period_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":484,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.118"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078101 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.person_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.person_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the person_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":485,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.119"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.payer_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.payer_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":486,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.120"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078154 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.payer_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.payer_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the payer_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":487,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.121"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.plan_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.plan_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the plan_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":488,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.122"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062488 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.plan_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.plan_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the plan_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":489,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.123"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.sponsor_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.sponsor_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the sponsor_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":490,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.124"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062488 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.sponsor_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.sponsor_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the sponsor_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":491,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.125"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.stop_reason_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.stop_reason_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the stop_reason_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":492,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.126"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.stop_reason_source_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.stop_reason_source_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the stop_reason_source_concept_id in the PAYER_PLAN_PERIOD is the expected data type based on the specification.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":493,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.127"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.cost_type_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.cost_type_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the cost_type_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":494,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.128"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078110 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = currency_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.currency_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.currency_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the currency_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":495,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.129"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062508 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = revenue_code_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.revenue_code_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.revenue_code_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the revenue_code_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":496,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.130"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nFIELD_CDM_DATATYPE\n\nAt a minimum, for each field that is supposed to be an integer, verify it is an integer\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = drg_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE CASE WHEN (CAST(abs(cdmTable.drg_concept_id) AS VARCHAR) ~ '^([0-9]+\\.?[0-9]*|\\.[0-9]+)$') THEN 1 ELSE 0 END = 0 AND cdmTable.drg_concept_id IS NOT NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"cdmDatatype","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"A yes or no value indicating if the drg_concept_id in the COST is the expected data type based on the specification.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"field_cdm_datatype.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":497,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"3.131"},{"NUM_VIOLATED_ROWS":77062,"PCT_VIOLATED_ROWS":0.6742,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.156250 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.person_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t WHERE cdmTable.person_id IN ( SELECT person_id \n\t\t                            FROM public.PERSON\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY person_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the person_id field of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":498,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"4.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t WHERE cdmTable.observation_period_id IN ( SELECT observation_period_id \n\t\t                            FROM public.OBSERVATION_PERIOD\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY observation_period_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the observation_period_id field of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":499,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.visit_occurrence_id IN ( SELECT visit_occurrence_id \n\t\t                            FROM public.VISIT_OCCURRENCE\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY visit_occurrence_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the visit_occurrence_id field of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":500,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.3"},{"NUM_VIOLATED_ROWS":21603,"PCT_VIOLATED_ROWS":0.2184,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.171875 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.condition_occurrence_id IN ( SELECT condition_occurrence_id \n\t\t                            FROM public.CONDITION_OCCURRENCE\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY condition_occurrence_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the condition_occurrence_id field of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":501,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"4.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.296832 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t WHERE cdmTable.drug_exposure_id IN ( SELECT drug_exposure_id \n\t\t                            FROM public.DRUG_EXPOSURE\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY drug_exposure_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the drug_exposure_id field of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":502,"FAILED":0,"_row":"4.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t WHERE cdmTable.procedure_occurrence_id IN ( SELECT procedure_occurrence_id \n\t\t                            FROM public.PROCEDURE_OCCURRENCE\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY procedure_occurrence_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the procedure_occurrence_id field of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":503,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078156 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t WHERE cdmTable.device_exposure_id IN ( SELECT device_exposure_id \n\t\t                            FROM public.DEVICE_EXPOSURE\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY device_exposure_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the device_exposure_id field of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":504,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.171871 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t WHERE cdmTable.measurement_id IN ( SELECT measurement_id \n\t\t                            FROM public.MEASUREMENT\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY measurement_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the measurement_id field of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":505,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t WHERE cdmTable.visit_detail_id IN ( SELECT visit_detail_id \n\t\t                            FROM public.VISIT_DETAIL\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY visit_detail_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the visit_detail_id field of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":506,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t WHERE cdmTable.note_id IN ( SELECT note_id \n\t\t                            FROM public.NOTE\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY note_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the note_id field of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":507,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062485 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t WHERE cdmTable.note_nlp_id IN ( SELECT note_nlp_id \n\t\t                            FROM public.NOTE_NLP\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY note_nlp_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the note_nlp_id field of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":508,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.11"},{"NUM_VIOLATED_ROWS":2517,"PCT_VIOLATED_ROWS":0.857,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t WHERE cdmTable.observation_id IN ( SELECT observation_id \n\t\t                            FROM public.OBSERVATION\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY observation_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the observation_id field of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":509,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"4.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062527 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t WHERE cdmTable.specimen_id IN ( SELECT specimen_id \n\t\t                            FROM public.SPECIMEN\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY specimen_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the specimen_id field of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":510,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062478 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.location_id' AS violating_field, cdmTable.* \n\t\t  FROM public.LOCATION cdmTable\n\t\t WHERE cdmTable.location_id IN ( SELECT location_id \n\t\t                            FROM public.LOCATION\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY location_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the location_id field of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":511,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062537 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CARE_SITE cdmTable\n\t\t WHERE cdmTable.care_site_id IN ( SELECT care_site_id \n\t\t                            FROM public.CARE_SITE\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY care_site_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the care_site_id field of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":512,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t WHERE cdmTable.provider_id IN ( SELECT provider_id \n\t\t                            FROM public.PROVIDER\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY provider_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the provider_id field of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":513,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PAYER_PLAN_PERIOD cdmTable\n\t\t WHERE cdmTable.payer_plan_period_id IN ( SELECT payer_plan_period_id \n\t\t                            FROM public.PAYER_PLAN_PERIOD\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY payer_plan_period_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the payer_plan_period_id field of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":514,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_PRIMARY_KEY\n\nPrimary Key - verify those fields where IS_PRIMARY_KEY == Yes, the values in that field are unique\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t WHERE cdmTable.cost_id IN ( SELECT cost_id \n\t\t                            FROM public.COST\n\t\t\t\t\t\t\t\t\t\t\t\t GROUP BY cost_id\n\t\t\t\t\t\t\t\t\t\t\t\tHAVING COUNT(*) > 1 ) \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isPrimaryKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a duplicate value in the cost_id field of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_is_primary_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":515,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"4.18"},{"NUM_VIOLATED_ROWS":7,"PCT_VIOLATED_ROWS":0.0001,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.531253 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.gender_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.gender_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PERSON table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":516,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.1"},{"NUM_VIOLATED_ROWS":107131,"PCT_VIOLATED_ROWS":0.9372,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.531258 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.race_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.race_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_concept_id field in the PERSON table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":517,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.2"},{"NUM_VIOLATED_ROWS":107093,"PCT_VIOLATED_ROWS":0.9369,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.718712 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.ethnicity_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.ethnicity_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_concept_id field in the PERSON table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":518,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078116 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = location_id\nfkTableName = LOCATION\nfkFieldName = LOCATION_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.location_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.LOCATION fkTable\n\t\tON cdmTable.location_id = fkTable.LOCATION_ID\n\t\tWHERE fkTable.LOCATION_ID IS NULL AND cdmTable.location_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the location_id field in the PERSON table that does not exist in the LOCATION table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":519,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the PERSON table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":520,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078110 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = care_site_id\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.CARE_SITE fkTable\n\t\tON cdmTable.care_site_id = fkTable.CARE_SITE_ID\n\t\tWHERE fkTable.CARE_SITE_ID IS NULL AND cdmTable.care_site_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the PERSON table that does not exist in the CARE_SITE table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":521,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.6"},{"NUM_VIOLATED_ROWS":7,"PCT_VIOLATED_ROWS":0.0001,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.593718 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.gender_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.gender_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_source_concept_id field in the PERSON table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":522,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.7"},{"NUM_VIOLATED_ROWS":107131,"PCT_VIOLATED_ROWS":0.9372,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.546878 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.race_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.race_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_source_concept_id field in the PERSON table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":523,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.8"},{"NUM_VIOLATED_ROWS":107093,"PCT_VIOLATED_ROWS":0.9369,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.718716 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.ethnicity_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.ethnicity_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_source_concept_id field in the PERSON table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":524,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062465 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the OBSERVATION_PERIOD table that does not exist in the PERSON table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":525,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = period_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.period_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.period_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the period_type_concept_id field in the OBSERVATION_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":526,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.124999 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the VISIT_OCCURRENCE table that does not exist in the PERSON table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":527,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.12"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.448358 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.visit_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.visit_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_concept_id field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":528,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.453135 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.visit_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.visit_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_type_concept_id field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":529,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"2.812410 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the VISIT_OCCURRENCE table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":530,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = care_site_id\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CARE_SITE fkTable\n\t\tON cdmTable.care_site_id = fkTable.CARE_SITE_ID\n\t\tWHERE fkTable.CARE_SITE_ID IS NULL AND cdmTable.care_site_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the VISIT_OCCURRENCE table that does not exist in the CARE_SITE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":531,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.16"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.453117 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.visit_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.visit_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_source_concept_id field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":532,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.17"},{"QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.admitting_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.admitting_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 442\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_isForeignKey_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":533,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.18"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.453146 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.discharge_to_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.discharge_to_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":534,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = preceding_visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.preceding_visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.preceding_visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the preceding_visit_occurrence_id field in the VISIT_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":535,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.171836 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the CONDITION_OCCURRENCE table that does not exist in the PERSON table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":536,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.703121 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.condition_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.condition_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":537,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.484338 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.condition_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.condition_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_type_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":538,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.23"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.578126 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.condition_status_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.condition_status_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_status_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":539,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078131 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the CONDITION_OCCURRENCE table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":540,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.25"},{"NUM_VIOLATED_ROWS":23095,"PCT_VIOLATED_ROWS":0.2335,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.109334 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the CONDITION_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":541,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078151 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the CONDITION_OCCURRENCE table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":542,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.27"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.749995 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.condition_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.condition_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_source_concept_id field in the CONDITION_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":543,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.281207 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DRUG_EXPOSURE table that does not exist in the PERSON table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":544,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.562504 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.drug_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.drug_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":545,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.546847 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.drug_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.drug_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_type_concept_id field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":546,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.31"},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":3.6492e-006,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.656212 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.route_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.route_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the route_concept_id field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":547,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.171881 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the DRUG_EXPOSURE table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":548,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.33"},{"NUM_VIOLATED_ROWS":5489,"PCT_VIOLATED_ROWS":0.02,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.187503 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the DRUG_EXPOSURE table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":549,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124997 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the DRUG_EXPOSURE table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":550,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.35"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.578100 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.drug_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.drug_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_source_concept_id field in the DRUG_EXPOSURE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":551,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.36"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.124992 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the PROCEDURE_OCCURRENCE table that does not exist in the PERSON table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":552,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.37"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.687466 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.procedure_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.procedure_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":553,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.468746 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.procedure_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.procedure_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":554,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.468718 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.modifier_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.modifier_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the modifier_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":555,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.40"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078112 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the PROCEDURE_OCCURRENCE table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":556,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.41"},{"NUM_VIOLATED_ROWS":474,"PCT_VIOLATED_ROWS":0.1028,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the PROCEDURE_OCCURRENCE table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":557,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.42"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the PROCEDURE_OCCURRENCE table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":558,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.43"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.671846 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.procedure_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.procedure_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_source_concept_id field in the PROCEDURE_OCCURRENCE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":559,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.44"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062483 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the DEVICE_EXPOSURE table that does not exist in the PERSON table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":560,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.45"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.device_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.device_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_concept_id field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":561,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.46"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062610 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.device_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.device_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_type_concept_id field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":562,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.47"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the DEVICE_EXPOSURE table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":563,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.48"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062511 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the DEVICE_EXPOSURE table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":564,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.49"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062470 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the DEVICE_EXPOSURE table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":565,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.50"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062525 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.device_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.device_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_source_concept_id field in the DEVICE_EXPOSURE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":566,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.51"},{"NUM_VIOLATED_ROWS":51,"PCT_VIOLATED_ROWS":0.0005,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.156244 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the MEASUREMENT table that does not exist in the PERSON table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":567,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.52"},{"NUM_VIOLATED_ROWS":99226,"PCT_VIOLATED_ROWS":0.9923,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.718742 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.measurement_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.measurement_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_concept_id field in the MEASUREMENT table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":568,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.53"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.484340 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.measurement_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.measurement_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_type_concept_id field in the MEASUREMENT table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":569,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.54"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093751 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = operator_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.operator_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.operator_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the operator_concept_id field in the MEASUREMENT table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":570,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.55"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.078097 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_as_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.value_as_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.value_as_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the value_as_concept_id field in the MEASUREMENT table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":571,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.56"},{"NUM_VIOLATED_ROWS":25961,"PCT_VIOLATED_ROWS":0.2596,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.671887 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.unit_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.unit_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the MEASUREMENT table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":572,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.57"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093706 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the MEASUREMENT table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":573,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.58"},{"NUM_VIOLATED_ROWS":45888,"PCT_VIOLATED_ROWS":0.4589,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.109344 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the MEASUREMENT table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":574,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.59"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093766 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the MEASUREMENT table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":575,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.60"},{"NUM_VIOLATED_ROWS":99226,"PCT_VIOLATED_ROWS":0.9923,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.718713 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.measurement_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.measurement_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_source_concept_id field in the MEASUREMENT table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":576,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.61"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.109385 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the VISIT_DETAIL table that does not exist in the PERSON table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":577,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.62"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.453135 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.visit_detail_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.visit_detail_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_concept_id field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":578,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.63"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.453079 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.visit_detail_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.visit_detail_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_type_concept_id field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":579,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.64"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the VISIT_DETAIL table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":580,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.65"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = care_site_id\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.CARE_SITE fkTable\n\t\tON cdmTable.care_site_id = fkTable.CARE_SITE_ID\n\t\tWHERE fkTable.CARE_SITE_ID IS NULL AND cdmTable.care_site_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the VISIT_DETAIL table that does not exist in the CARE_SITE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":581,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.66"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.453123 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.visit_detail_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.visit_detail_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_source_concept_id field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":582,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.67"},{"QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.admitting_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.admitting_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 434\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_isForeignKey_VISIT_DETAIL_admitting_source_concept_id.txt","checkId":583,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.68"},{"NUM_VIOLATED_ROWS":6004,"PCT_VIOLATED_ROWS":0.7592,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.437464 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.discharge_to_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.discharge_to_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_DETAIL table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":584,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.69"},{"NUM_VIOLATED_ROWS":1904,"PCT_VIOLATED_ROWS":0.2408,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = preceding_visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.preceding_visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.preceding_visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.preceding_visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the preceding_visit_detail_id field in the VISIT_DETAIL table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"preceding_visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":585,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.70"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062423 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_parent_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_parent_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_parent_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_parent_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_parent_id field in the VISIT_DETAIL table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_parent_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":586,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.71"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the VISIT_DETAIL table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":587,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.72"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062515 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the NOTE table that does not exist in the PERSON table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":588,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.73"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.note_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.note_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_type_concept_id field in the NOTE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":589,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.74"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_class_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.note_class_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.note_class_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_class_concept_id field in the NOTE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":590,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.75"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = encoding_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.encoding_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.encoding_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the encoding_concept_id field in the NOTE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":591,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.76"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078080 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = language_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.language_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.language_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the language_concept_id field in the NOTE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":592,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.77"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062490 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the NOTE table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":593,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.78"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the NOTE table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":594,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.79"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the NOTE table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":595,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.80"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062467 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_id\nfkTableName = NOTE\nfkFieldName = NOTE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tLEFT JOIN public.NOTE fkTable\n\t\tON cdmTable.note_id = fkTable.NOTE_ID\n\t\tWHERE fkTable.NOTE_ID IS NULL AND cdmTable.note_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_id field in the NOTE_NLP table that does not exist in the NOTE table.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":596,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.81"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = section_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.section_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.section_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the section_concept_id field in the NOTE_NLP table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":597,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.82"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062489 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.note_nlp_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.note_nlp_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_nlp_concept_id field in the NOTE_NLP table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":598,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.83"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062522 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.note_nlp_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.note_nlp_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_nlp_source_concept_id field in the NOTE_NLP table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":599,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.84"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.140625 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the OBSERVATION table that does not exist in the PERSON table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":600,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.85"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.453084 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.observation_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.observation_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_concept_id field in the OBSERVATION table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":601,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.86"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.437493 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.observation_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.observation_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_type_concept_id field in the OBSERVATION table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":602,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.87"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062511 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = value_as_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.value_as_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.value_as_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.value_as_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the value_as_concept_id field in the OBSERVATION table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":603,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.88"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.qualifier_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.qualifier_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the qualifier_concept_id field in the OBSERVATION table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":604,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.89"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062456 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.unit_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.unit_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the OBSERVATION table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":605,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.90"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = provider_id\nfkTableName = PROVIDER\nfkFieldName = PROVIDER_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.PROVIDER fkTable\n\t\tON cdmTable.provider_id = fkTable.PROVIDER_ID\n\t\tWHERE fkTable.PROVIDER_ID IS NULL AND cdmTable.provider_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the provider_id field in the OBSERVATION table that does not exist in the PROVIDER table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":606,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.91"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_occurrence_id\nfkTableName = VISIT_OCCURRENCE\nfkFieldName = VISIT_OCCURRENCE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.VISIT_OCCURRENCE fkTable\n\t\tON cdmTable.visit_occurrence_id = fkTable.VISIT_OCCURRENCE_ID\n\t\tWHERE fkTable.VISIT_OCCURRENCE_ID IS NULL AND cdmTable.visit_occurrence_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_occurrence_id field in the OBSERVATION table that does not exist in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":607,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.92"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062473 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_detail_id\nfkTableName = VISIT_DETAIL\nfkFieldName = VISIT_DETAIL_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.VISIT_DETAIL fkTable\n\t\tON cdmTable.visit_detail_id = fkTable.VISIT_DETAIL_ID\n\t\tWHERE fkTable.VISIT_DETAIL_ID IS NULL AND cdmTable.visit_detail_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_id field in the OBSERVATION table that does not exist in the VISIT_DETAIL table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":608,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.93"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.437331 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.observation_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.observation_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_source_concept_id field in the OBSERVATION table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":609,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.94"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062514 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the SPECIMEN table that does not exist in the PERSON table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":610,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.95"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.specimen_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.specimen_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_concept_id field in the SPECIMEN table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":611,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.96"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062451 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.specimen_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.specimen_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_type_concept_id field in the SPECIMEN table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":612,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.97"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.unit_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.unit_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the SPECIMEN table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":613,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.98"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078163 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.anatomic_site_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.anatomic_site_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the anatomic_site_concept_id field in the SPECIMEN table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":614,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.99"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062508 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.disease_status_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.disease_status_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the disease_status_concept_id field in the SPECIMEN table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":615,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.100"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_1\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.domain_concept_id_1 = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.domain_concept_id_1 IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the domain_concept_id_1 field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":616,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.101"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_2\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.domain_concept_id_2 = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.domain_concept_id_2 IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the domain_concept_id_2 field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":617,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.102"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = relationship_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.relationship_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.relationship_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the relationship_concept_id field in the FACT_RELATIONSHIP table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":618,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.103"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.place_of_service_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.place_of_service_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the place_of_service_concept_id field in the CARE_SITE table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":619,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.104"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078157 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = location_id\nfkTableName = LOCATION\nfkFieldName = LOCATION_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.location_id' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tLEFT JOIN public.LOCATION fkTable\n\t\tON cdmTable.location_id = fkTable.LOCATION_ID\n\t\tWHERE fkTable.LOCATION_ID IS NULL AND cdmTable.location_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the location_id field in the CARE_SITE table that does not exist in the LOCATION table.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"location_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":620,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.105"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062525 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.specialty_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.specialty_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specialty_concept_id field in the PROVIDER table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":621,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.106"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = care_site_id\nfkTableName = CARE_SITE\nfkFieldName = CARE_SITE_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tLEFT JOIN public.CARE_SITE fkTable\n\t\tON cdmTable.care_site_id = fkTable.CARE_SITE_ID\n\t\tWHERE fkTable.CARE_SITE_ID IS NULL AND cdmTable.care_site_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the care_site_id field in the PROVIDER table that does not exist in the CARE_SITE table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":622,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.107"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062457 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.gender_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.gender_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PROVIDER table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":623,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.108"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.specialty_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.specialty_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specialty_source_concept_id field in the PROVIDER table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":624,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.109"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.gender_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.gender_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_source_concept_id field in the PROVIDER table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":625,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.110"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.payer_plan_period_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.payer_plan_period_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_plan_period_id field in the PAYER_PLAN_PERIOD table that does not exist in the PERSON table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":626,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.111"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062424 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = person_id\nfkTableName = PERSON\nfkFieldName = PERSON_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.PERSON fkTable\n\t\tON cdmTable.person_id = fkTable.PERSON_ID\n\t\tWHERE fkTable.PERSON_ID IS NULL AND cdmTable.person_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the person_id field in the PAYER_PLAN_PERIOD table that does not exist in the PERSON table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":627,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.112"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.payer_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.payer_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":628,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.113"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078113 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.payer_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.payer_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":629,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.114"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078136 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.plan_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.plan_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the plan_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":630,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.115"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.plan_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.plan_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the plan_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":631,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.116"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062465 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.sponsor_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.sponsor_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the sponsor_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":632,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.117"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062512 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.sponsor_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.sponsor_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the sponsor_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":633,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.118"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.stop_reason_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.stop_reason_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the stop_reason_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":634,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.119"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_source_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.stop_reason_source_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.stop_reason_source_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the stop_reason_source_concept_id field in the PAYER_PLAN_PERIOD table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":635,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.120"},{"QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_domain_id\nfkTableName = DOMAIN\nfkFieldName = DOMAIN_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tLEFT JOIN public.DOMAIN fkTable\n\t\tON cdmTable.cost_domain_id = fkTable.DOMAIN_ID\n\t\tWHERE fkTable.DOMAIN_ID IS NULL AND cdmTable.cost_domain_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the cost_domain_id field in the COST table that does not exist in the DOMAIN table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.cost_domain_id does not exist\n  Position: 404\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_isForeignKey_COST_cost_domain_id.txt","checkId":636,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.121"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_type_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.cost_type_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.cost_type_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the cost_type_concept_id field in the COST table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":637,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.122"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = currency_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.currency_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.currency_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the currency_concept_id field in the COST table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":638,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.123"},{"QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_patient_copay\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_patient_copay' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.paid_patient_copay = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.paid_patient_copay IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the paid_patient_copay field in the COST table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_copay","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_patient_copay does not exist\n  Position: 409\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_isForeignKey_COST_paid_patient_copay.txt","checkId":639,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"5.124"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = payer_plan_period_id\nfkTableName = PAYER_PLAN_PERIOD\nfkFieldName = PAYER_PLAN_PERIOD_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.payer_plan_period_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tLEFT JOIN public.PAYER_PLAN_PERIOD fkTable\n\t\tON cdmTable.payer_plan_period_id = fkTable.PAYER_PLAN_PERIOD_ID\n\t\tWHERE fkTable.PAYER_PLAN_PERIOD_ID IS NULL AND cdmTable.payer_plan_period_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the payer_plan_period_id field in the COST table that does not exist in the PAYER_PLAN_PERIOD table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":640,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.125"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062518 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = revenue_code_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.revenue_code_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.revenue_code_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the revenue_code_concept_id field in the COST table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":641,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.126"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078113 secs","QUERY_TEXT":"\n/*********\nIS_FOREIGN_KEY\nForeign key check\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = drg_concept_id\nfkTableName = CONCEPT\nfkFieldName = CONCEPT_ID\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tLEFT JOIN public.CONCEPT fkTable\n\t\tON cdmTable.drg_concept_id = fkTable.CONCEPT_ID\n\t\tWHERE fkTable.CONCEPT_ID IS NULL AND cdmTable.drg_concept_id IS NOT NULL \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isForeignKey","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drg_concept_id field in the COST table that does not exist in the CONCEPT table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"is_foreign_key.sql","CATEGORY":"Conformance","SUBCATEGORY":"Relational","CONTEXT":"Verification","checkId":642,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"5.127"},{"NUM_VIOLATED_ROWS":114299,"PCT_VIOLATED_ROWS":0.9999,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.656210 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\nfkDomain = Gender\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.gender_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Gender'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PERSON table that do not conform to the Gender domain.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":643,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"6.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.687500 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\nfkDomain = Race\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.race_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Race'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the race_concept_id field in the PERSON table that do not conform to the Race domain.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":644,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.812531 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\nfkDomain = Ethnicity\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.ethnicity_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Ethnicity'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the ethnicity_concept_id field in the PERSON table that do not conform to the Ethnicity domain.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":645,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093711 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = period_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.period_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the period_type_concept_id field in the OBSERVATION_PERIOD table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":646,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.562504 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\nfkDomain = Visit\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.visit_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Visit'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_concept_id field in the VISIT_OCCURRENCE table that do not conform to the Visit domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":647,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.531219 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.visit_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_type_concept_id field in the VISIT_OCCURRENCE table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":648,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.6"},{"QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_concept_id\nfkDomain = Visit\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.admitting_source_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Visit'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the admitting_source_concept_id field in the VISIT_OCCURRENCE table that do not conform to the Visit domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 445\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_fkDomain_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":649,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"6.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.515654 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_concept_id\nfkDomain = Visit\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.discharge_to_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Visit'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the discharge_to_concept_id field in the VISIT_OCCURRENCE table that do not conform to the Visit domain.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":650,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.8"},{"NUM_VIOLATED_ROWS":25941,"PCT_VIOLATED_ROWS":0.2623,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.734348 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\nfkDomain = Condition\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.condition_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Condition'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_concept_id field in the CONDITION_OCCURRENCE table that do not conform to the Condition domain.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":651,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"6.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.546801 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.condition_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the condition_type_concept_id field in the CONDITION_OCCURRENCE table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":652,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.562496 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\nfkDomain = Drug\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.drug_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Drug'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_concept_id field in the DRUG_EXPOSURE table that do not conform to the Drug domain.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":653,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.625011 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.drug_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the drug_type_concept_id field in the DRUG_EXPOSURE table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":654,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.12"},{"NUM_VIOLATED_ROWS":274031,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.765546 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_concept_id\nfkDomain = Route\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.route_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Route'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the route_concept_id field in the DRUG_EXPOSURE table that do not conform to the Route domain.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":655,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"6.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.703143 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\nfkDomain = Procedure\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.procedure_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Procedure'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table that do not conform to the Procedure domain.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":656,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.515584 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.procedure_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":657,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\nfkDomain = Device\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.device_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Device'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_concept_id field in the DEVICE_EXPOSURE table that do not conform to the Device domain.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":658,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.device_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the device_type_concept_id field in the DEVICE_EXPOSURE table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":659,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.17"},{"NUM_VIOLATED_ROWS":775,"PCT_VIOLATED_ROWS":0.0077,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.781219 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\nfkDomain = Measurement\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.measurement_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Measurement'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_concept_id field in the MEASUREMENT table that do not conform to the Measurement domain.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":660,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"6.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.562501 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.measurement_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the measurement_type_concept_id field in the MEASUREMENT table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":661,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.19"},{"NUM_VIOLATED_ROWS":1031,"PCT_VIOLATED_ROWS":0.0103,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.734382 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_concept_id\nfkDomain = Unit\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.unit_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Unit'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the MEASUREMENT table that do not conform to the Unit domain.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":662,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"6.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.531209 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\nfkDomain = Visit\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.visit_detail_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Visit'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_concept_id field in the VISIT_DETAIL table that do not conform to the Visit domain.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":663,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.531253 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.visit_detail_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the visit_detail_type_concept_id field in the VISIT_DETAIL table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":664,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062485 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.note_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the note_type_concept_id field in the NOTE table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":665,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.531456 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.observation_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the observation_type_concept_id field in the OBSERVATION table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":666,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.531181 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_concept_id\nfkDomain = Unit\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.unit_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Unit'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the unit_concept_id field in the OBSERVATION table that do not conform to the Unit domain.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":667,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.25"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078114 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\nfkDomain = Type Concept\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.specimen_type_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Type Concept'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the specimen_type_concept_id field in the SPECIMEN table that do not conform to the Type Concept domain.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":668,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062508 secs","QUERY_TEXT":"\n/*********\nFIELD_FK_DOMAIN\n\nall standard concept ids are part of specified domain\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_concept_id\nfkDomain = Gender\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t  LEFT JOIN public.concept co\n\t\t    ON cdmTable.gender_concept_id = co.concept_id\n\t\t WHERE co.concept_id != 0 AND co.domain_id != 'Gender'\n\t\t  \n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"fkDomain","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that have a value in the gender_concept_id field in the PROVIDER table that do not conform to the Gender domain.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_fk_domain.sql","CATEGORY":"Conformance","SUBCATEGORY":"Value","CONTEXT":"Verification","checkId":669,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"6.27"},{"NUM_VIOLATED_ROWS":114299,"PCT_VIOLATED_ROWS":0.9999,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.640603 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t  join public.concept co ON cdmTable.gender_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the gender_concept_id field in the PERSON table. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":670,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.656216 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t  join public.concept co ON cdmTable.race_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the race_concept_id field in the PERSON table. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":671,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.828092 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PERSON cdmTable\n\t\t  join public.concept co ON cdmTable.ethnicity_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the ethnicity_concept_id field in the PERSON table. ","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":672,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = period_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION_PERIOD cdmTable\n\t\t  join public.concept co ON cdmTable.period_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the period_type_concept_id field in the OBSERVATION_PERIOD table. ","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":673,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.593696 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.visit_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":674,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.5"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.578133 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.visit_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_type_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":675,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.6"},{"QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.admitting_source_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the admitting_source_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 434\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_isStandardValidConcept_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":676,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.609367 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.discharge_to_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the discharge_to_concept_id field in the VISIT_OCCURRENCE table. ","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":677,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.8"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.890636 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.condition_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":678,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.9"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.624997 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.condition_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_type_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":679,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.734378 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CONDITION_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.condition_status_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the condition_status_concept_id field in the CONDITION_OCCURRENCE table. ","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":680,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.671828 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t  join public.concept co ON cdmTable.drug_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":681,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.12"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.718714 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t  join public.concept co ON cdmTable.drug_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the drug_type_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":682,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.13"},{"NUM_VIOLATED_ROWS":274031,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.781219 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DRUG_EXPOSURE cdmTable\n\t\t  join public.concept co ON cdmTable.route_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the route_concept_id field in the DRUG_EXPOSURE table. ","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":683,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.812503 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.procedure_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the procedure_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":684,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.15"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.609333 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.procedure_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the procedure_type_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":685,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.593729 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\t  join public.concept co ON cdmTable.modifier_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the modifier_concept_id field in the PROCEDURE_OCCURRENCE table. ","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":686,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062470 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t  join public.concept co ON cdmTable.device_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the device_concept_id field in the DEVICE_EXPOSURE table. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":687,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.DEVICE_EXPOSURE cdmTable\n\t\t  join public.concept co ON cdmTable.device_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the device_type_concept_id field in the DEVICE_EXPOSURE table. ","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":688,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.19"},{"NUM_VIOLATED_ROWS":775,"PCT_VIOLATED_ROWS":0.0077,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.828083 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t  join public.concept co ON cdmTable.measurement_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the measurement_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":689,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.20"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.625011 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t  join public.concept co ON cdmTable.measurement_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the measurement_type_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":690,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.593711 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = operator_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t  join public.concept co ON cdmTable.operator_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the operator_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":691,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.22"},{"NUM_VIOLATED_ROWS":1031,"PCT_VIOLATED_ROWS":0.0103,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.781218 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.MEASUREMENT cdmTable\n\t\t  join public.concept co ON cdmTable.unit_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the MEASUREMENT table. ","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":692,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.578126 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t  join public.concept co ON cdmTable.visit_detail_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_detail_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":693,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.24"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.578087 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t  join public.concept co ON cdmTable.visit_detail_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the visit_detail_type_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":694,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.25"},{"QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t  join public.concept co ON cdmTable.admitting_source_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the admitting_source_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 426\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_isStandardValidConcept_VISIT_DETAIL_admitting_source_concept_id.txt","checkId":695,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.593739 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.VISIT_DETAIL cdmTable\n\t\t  join public.concept co ON cdmTable.discharge_to_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the discharge_to_concept_id field in the VISIT_DETAIL table. ","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":696,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062476 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t  join public.concept co ON cdmTable.note_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_type_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":697,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_class_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t  join public.concept co ON cdmTable.note_class_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_class_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":698,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = encoding_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t  join public.concept co ON cdmTable.encoding_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the encoding_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":699,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062470 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = language_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE cdmTable\n\t\t  join public.concept co ON cdmTable.language_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the language_concept_id field in the NOTE table. ","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":700,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = section_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t  join public.concept co ON cdmTable.section_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the section_concept_id field in the NOTE_NLP table. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":701,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062537 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.NOTE_NLP cdmTable\n\t\t  join public.concept co ON cdmTable.note_nlp_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the note_nlp_concept_id field in the NOTE_NLP table. ","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":702,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.578073 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t  join public.concept co ON cdmTable.observation_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the observation_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":703,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.34"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.593758 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t  join public.concept co ON cdmTable.observation_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the observation_type_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":704,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"7.35"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.578083 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t  join public.concept co ON cdmTable.qualifier_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the qualifier_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":705,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.36"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.593706 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.OBSERVATION cdmTable\n\t\t  join public.concept co ON cdmTable.unit_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the OBSERVATION table. ","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":706,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t  join public.concept co ON cdmTable.specimen_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specimen_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":707,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t  join public.concept co ON cdmTable.specimen_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specimen_type_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":708,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t  join public.concept co ON cdmTable.unit_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the unit_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":709,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.40"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t  join public.concept co ON cdmTable.anatomic_site_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the anatomic_site_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":710,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.41"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.SPECIMEN cdmTable\n\t\t  join public.concept co ON cdmTable.disease_status_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the disease_status_concept_id field in the SPECIMEN table. ","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":711,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.42"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062492 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.CARE_SITE cdmTable\n\t\t  join public.concept co ON cdmTable.place_of_service_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the place_of_service_concept_id field in the CARE_SITE table. ","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":712,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.43"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t  join public.concept co ON cdmTable.specialty_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the specialty_concept_id field in the PROVIDER table. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":713,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.44"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.PROVIDER cdmTable\n\t\t  join public.concept co ON cdmTable.gender_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the gender_concept_id field in the PROVIDER table. ","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":714,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.45"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nFIELD_IS_STANDARD_VALID_CONCEPT\n\nall standard concept id fields are standard and valid\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, cdmTable.* \n\t\t  FROM public.COST cdmTable\n\t\t  join public.concept co ON cdmTable.cost_type_concept_id = co.concept_id\n\t\t  WHERE co.concept_id != 0 AND (co.standard_concept != 'S' OR co.invalid_reason IS NOT NULL ) \n  ) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;","CHECK_NAME":"isStandardValidConcept","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records that do not have a standard, valid concept in the cost_type_concept_id field in the COST table. ","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_is_standard_valid_concept.sql","CATEGORY":"Conformance","SUBCATEGORY":"","CONTEXT":"Verification","checkId":715,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"7.46"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078118 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":716,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.gender_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":717,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = year_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.year_of_birth IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":718,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093747 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = month_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.month_of_birth IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the month_of_birth of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":719,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.4"},{"NUM_VIOLATED_ROWS":114306,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093743 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = day_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.day_of_birth IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the day_of_birth of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":720,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.5"},{"NUM_VIOLATED_ROWS":114306,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = birth_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.birth_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the birth_datetime of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":721,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.race_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":722,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078151 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.ethnicity_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":723,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.8"},{"NUM_VIOLATED_ROWS":114306,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.location_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.location_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":724,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.9"},{"NUM_VIOLATED_ROWS":114306,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.109337 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":725,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.10"},{"NUM_VIOLATED_ROWS":114306,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.109377 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.care_site_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":726,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.11"},{"NUM_VIOLATED_ROWS":114306,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = person_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.person_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.person_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"person_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":727,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.109377 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.gender_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":728,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093755 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.gender_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":729,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093761 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.race_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":730,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093759 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.race_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the race_source_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":731,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093755 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.ethnicity_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_source_value of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":732,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093764 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.ethnicity_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the ethnicity_source_concept_id of the PERSON.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":733,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078110 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.observation_period_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_id of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":734,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062567 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":735,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062508 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.observation_period_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_start_date of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":736,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.observation_period_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_period_end_date of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":737,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = period_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.period_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the period_type_concept_id of the OBSERVATION_PERIOD.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":738,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078113 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":739,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078139 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":740,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.25"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062521 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":741,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.26"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_date of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":742,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_start_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_start_datetime of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":743,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.28"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_date of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":744,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078114 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_end_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_end_datetime of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":745,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078114 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_type_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":746,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.31"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":747,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.32"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.care_site_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":748,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_source_value of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":749,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_source_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":750,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.35"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.admitting_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 410\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":751,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.36"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.admitting_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_value of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_value does not exist\n  Position: 405\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_VISIT_OCCURRENCE_admitting_source_value.txt","checkId":752,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.discharge_to_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_concept_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":753,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062448 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.discharge_to_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_source_value of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":754,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.39"},{"NUM_VIOLATED_ROWS":11124,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062403 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = preceding_visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.preceding_visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.preceding_visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the preceding_visit_occurrence_id of the VISIT_OCCURRENCE.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"preceding_visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":755,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.40"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078087 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_occurrence_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":756,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.41"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093755 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":757,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.42"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":758,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.43"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093744 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_date of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":759,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.44"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_start_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_start_datetime of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":760,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.45"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093716 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_end_date of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":761,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.46"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093783 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_end_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_end_datetime of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":762,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.47"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093764 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_type_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":763,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.48"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093713 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_status_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_status_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":764,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.49"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093697 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = stop_reason\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.stop_reason' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.stop_reason IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":765,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.50"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093745 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":766,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.51"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093758 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":767,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.52"},{"NUM_VIOLATED_ROWS":98903,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093765 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":768,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.53"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_source_value of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":769,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.54"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093758 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_source_concept_id of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":770,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.55"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_status_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the condition_status_source_value of the CONDITION_OCCURRENCE.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":771,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.56"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140602 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_exposure_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":772,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.57"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124962 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":773,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.58"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140649 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":774,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.59"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140625 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_exposure_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_date of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":775,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.60"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125001 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_exposure_start_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_start_datetime of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":776,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.61"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140580 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_exposure_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_date of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":777,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.62"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125006 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_exposure_end_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_exposure_end_datetime of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":778,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.63"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140602 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = verbatim_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.verbatim_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the verbatim_end_date of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":779,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.64"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124867 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_type_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":780,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.65"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140625 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = stop_reason\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.stop_reason' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.stop_reason IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"stop_reason","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":781,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.66"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140626 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = refills\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.refills IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the refills of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":782,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.67"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140623 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = quantity\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.quantity IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":783,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.68"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140632 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = days_supply\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.days_supply IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the days_supply of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":784,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.69"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140637 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = sig\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.sig' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.sig IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sig of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"sig","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":785,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.70"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140594 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.route_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the route_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":786,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.71"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140637 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = lot_number\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.lot_number' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.lot_number IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lot_number of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"lot_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":787,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.72"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140620 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":788,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.73"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124938 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":789,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.74"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124999 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":790,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.75"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.124993 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_source_value of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":791,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.76"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140573 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drug_source_concept_id of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":792,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.77"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140626 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.route_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.route_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the route_source_value of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":793,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.78"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140611 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = dose_unit_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.dose_unit_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.dose_unit_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dose_unit_source_value of the DRUG_EXPOSURE.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"dose_unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":794,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.79"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_occurrence_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":795,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.80"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062492 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":796,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.81"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":797,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.82"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_date of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":798,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.83"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_datetime of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":799,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.84"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_type_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":800,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.85"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.modifier_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the modifier_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":801,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.86"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062468 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = quantity\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.quantity IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":802,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.87"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078122 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":803,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.88"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":804,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.89"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078152 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":805,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.90"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078150 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_source_value of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":806,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.91"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078115 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the procedure_source_concept_id of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":807,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.92"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.modifier_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the modifier_source_value of the PROCEDURE_OCCURRENCE.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":808,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.93"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_exposure_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":809,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.94"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":810,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.95"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062448 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":811,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.96"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_exposure_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_date of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":812,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.97"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062453 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_exposure_start_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_start_datetime of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":813,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.98"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062483 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_exposure_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_end_date of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":814,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.99"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062478 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_exposure_end_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_exposure_end_datetime of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":815,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.100"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_type_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":816,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.101"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062489 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = unique_device_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.unique_device_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.unique_device_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unique_device_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"unique_device_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":817,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.102"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078131 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = quantity\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.quantity IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":818,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.103"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":819,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.104"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":820,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.105"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062395 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":821,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.106"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_source_value of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":822,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.107"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the device_source_concept_id of the DEVICE_EXPOSURE.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":823,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.108"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.078066 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":824,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.109"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":825,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.110"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093792 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":826,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.111"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093744 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_date of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":827,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.112"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093759 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_datetime of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":828,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.113"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093734 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_time\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_time' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_time IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_time of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_time","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":829,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.114"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093751 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_type_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":830,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.115"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093746 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = operator_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.operator_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.operator_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the operator_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"operator_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":831,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.116"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093787 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_as_number\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.value_as_number' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.value_as_number IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_number of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":832,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.117"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093721 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_as_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.value_as_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.value_as_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":833,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.118"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093773 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.unit_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":834,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.119"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093725 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = range_low\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.range_low' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.range_low IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the range_low of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_low","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":835,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.120"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.125041 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = range_high\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.range_high' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.range_high IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the range_high of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"range_high","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":836,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.121"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.109378 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":837,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.122"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093760 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":838,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.123"},{"NUM_VIOLATED_ROWS":100001,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":839,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.124"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_source_value of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":840,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.125"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093706 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the measurement_source_concept_id of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":841,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.126"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.078121 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.unit_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.unit_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":842,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.127"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.078127 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = value_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.value_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.value_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_source_value of the MEASUREMENT.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"value_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":843,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.128"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":844,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.129"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":845,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.130"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":846,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.131"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_date of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":847,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.132"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062470 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_start_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_start_datetime of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":848,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.133"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_date of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":849,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.134"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078108 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_end_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_end_datetime of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":850,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.135"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_type_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":851,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.136"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078102 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":852,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.137"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.care_site_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":853,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.138"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_source_value of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":854,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.139"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_source_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":855,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.140"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.admitting_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.admitting_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_value of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_value does not exist\n  Position: 397\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_VISIT_DETAIL_admitting_source_value.txt","checkId":856,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.141"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.admitting_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the admitting_source_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 402\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_VISIT_DETAIL_admitting_source_concept_id.txt","checkId":857,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.142"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.discharge_to_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.discharge_to_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_source_value of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":858,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.143"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078132 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.discharge_to_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the discharge_to_concept_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":859,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.144"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = preceding_visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.preceding_visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.preceding_visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the preceding_visit_detail_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"preceding_visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":860,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.145"},{"NUM_VIOLATED_ROWS":7908,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_parent_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_parent_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_parent_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_parent_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_parent_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":861,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.146"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the VISIT_DETAIL.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":862,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.147"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062490 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":863,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.148"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":864,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.149"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062552 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_date' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_date of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":865,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.150"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062461 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_datetime of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":866,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.151"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_type_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":867,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.152"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062530 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_class_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_class_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_class_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_class_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_class_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":868,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.153"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_title\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_title' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_title IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_title of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_title","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":869,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.154"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078132 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_text\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_text' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_text IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_text of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_text","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":870,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.155"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = encoding_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.encoding_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.encoding_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the encoding_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"encoding_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":871,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.156"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078122 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = language_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.language_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.language_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the language_concept_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"language_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":872,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.157"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062561 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":873,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.158"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062511 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":874,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.159"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062475 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":875,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.160"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE cdmTable\n\t\tWHERE cdmTable.note_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_source_value of the NOTE.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":876,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.161"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.note_nlp_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":877,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.162"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.note_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":878,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.163"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = section_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.section_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.section_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the section_concept_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"section_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":879,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.164"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078145 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = snippet\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.snippet' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.snippet IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the snippet of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"snippet","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":880,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.165"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = offset\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.offset' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.offset IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the offset of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"offset","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":881,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.166"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = lexical_variant\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.lexical_variant' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.lexical_variant IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the lexical_variant of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"lexical_variant","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":882,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.167"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.046876 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.note_nlp_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_concept_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":883,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.168"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = note_nlp_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.note_nlp_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.note_nlp_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the note_nlp_source_concept_id of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"note_nlp_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":884,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.169"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078121 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_system\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.nlp_system' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.nlp_system IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_system of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_system","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":885,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.170"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062457 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.nlp_date' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.nlp_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_date of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":886,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.171"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.nlp_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the nlp_datetime of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":887,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.172"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = term_exists\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.term_exists' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.term_exists IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_exists of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_exists","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":888,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.173"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = term_temporal\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.term_temporal' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.term_temporal IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_temporal of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_temporal","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":889,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.174"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = term_modifiers\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.term_modifiers' AS violating_field, cdmTable.* \n\t\tFROM public.NOTE_NLP cdmTable\n\t\tWHERE cdmTable.term_modifiers IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the term_modifiers of the NOTE_NLP.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"term_modifiers","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":890,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.175"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062491 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":891,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.176"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":892,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.177"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":893,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.178"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.078091 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_date of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":894,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.179"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062617 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_datetime of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":895,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.180"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_type_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":896,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.181"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = value_as_number\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.value_as_number' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.value_as_number IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_number of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_number","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":897,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.182"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062487 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = value_as_string\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.value_as_string' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.value_as_string IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_string of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_string","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":898,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.183"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062529 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = value_as_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.value_as_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.value_as_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the value_as_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"value_as_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":899,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.184"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.qualifier_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.qualifier_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the qualifier_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":900,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.185"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.unit_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":901,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.186"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062527 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":902,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.187"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062492 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_occurrence_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.visit_occurrence_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.visit_occurrence_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_occurrence_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_occurrence_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":903,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.188"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = visit_detail_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.visit_detail_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.visit_detail_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the visit_detail_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"visit_detail_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":904,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.189"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062535 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_source_value of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":905,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.190"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062522 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the observation_source_concept_id of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":906,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.191"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.unit_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.unit_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":907,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.192"},{"NUM_VIOLATED_ROWS":2937,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.qualifier_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.qualifier_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the qualifier_source_value of the OBSERVATION.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":908,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.193"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":909,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.194"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062482 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":910,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.195"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093783 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":911,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.196"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062490 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_type_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":912,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.197"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_date of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":913,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.198"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062489 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_datetime IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_datetime of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":914,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.199"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = quantity\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.quantity' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.quantity IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the quantity of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":915,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.200"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.unit_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":916,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.201"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.anatomic_site_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.anatomic_site_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the anatomic_site_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":917,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.202"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062527 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.disease_status_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.disease_status_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the disease_status_concept_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":918,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.203"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_source_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_source_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_source_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_source_id of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":919,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.204"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specimen_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":920,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.205"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062476 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.unit_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.unit_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the unit_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":921,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.206"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.anatomic_site_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.anatomic_site_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the anatomic_site_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":922,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.207"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.disease_status_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.disease_status_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the disease_status_source_value of the SPECIMEN.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":923,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.208"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_1\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.domain_concept_id_1 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_1 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":924,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.209"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_1\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_1' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.fact_id_1 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_1 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":925,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.210"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_2\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.domain_concept_id_2 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the domain_concept_id_2 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":926,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.211"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078117 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = fact_id_2\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.fact_id_2' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.fact_id_2 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the fact_id_2 of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"fact_id_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":927,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.212"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = relationship_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.relationship_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the relationship_concept_id of the FACT_RELATIONSHIP.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":928,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.213"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062459 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.location_id' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.location_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":929,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.214"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = address_1\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.address_1' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.address_1 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the address_1 of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_1","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":930,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.215"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = address_2\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.address_2' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.address_2 IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the address_2 of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"address_2","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":931,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.216"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062520 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = city\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.city' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.city IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the city of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"city","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":932,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.217"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078076 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = state\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.state' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.state IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the state of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"state","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":933,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.218"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062485 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = zip\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.zip' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.zip IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the zip of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"zip","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":934,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.219"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062478 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = county\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.county' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.county IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the county of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"county","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":935,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.220"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = LOCATION\ncdmFieldName = location_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'LOCATION.location_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.LOCATION cdmTable\n\t\tWHERE cdmTable.location_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.LOCATION\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_source_value of the LOCATION.","CDM_TABLE_NAME":"LOCATION","CDM_FIELD_NAME":"location_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":936,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.221"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062492 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tWHERE cdmTable.care_site_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":937,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.222"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078118 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_name\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.care_site_name' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tWHERE cdmTable.care_site_name IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_name of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_name","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":938,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.223"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tWHERE cdmTable.place_of_service_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the place_of_service_concept_id of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":939,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.224"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078098 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = location_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.location_id' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tWHERE cdmTable.location_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the location_id of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"location_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":940,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.225"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062457 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = care_site_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.care_site_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tWHERE cdmTable.care_site_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_source_value of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"care_site_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":941,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.226"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.place_of_service_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tWHERE cdmTable.place_of_service_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the place_of_service_source_value of the CARE_SITE.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":942,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.227"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.provider_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.provider_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":943,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.228"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078083 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_name\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.provider_name' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.provider_name IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_name of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_name","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":944,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.229"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = npi\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.npi' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.npi IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the npi of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"npi","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":945,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.230"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = dea\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.dea' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.dea IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the dea of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"dea","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":946,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.231"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.specialty_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":947,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.232"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062527 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = care_site_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.care_site_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.care_site_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the care_site_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"care_site_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":948,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.233"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = year_of_birth\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.year_of_birth' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.year_of_birth IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the year_of_birth of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":949,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.234"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.gender_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":950,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.235"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = provider_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.provider_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.provider_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the provider_source_value of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"provider_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":951,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.236"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.specialty_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_source_value of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":952,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.237"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078118 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.specialty_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the specialty_source_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":953,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.238"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.gender_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_value of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":954,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.239"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062476 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.gender_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the gender_source_concept_id of the PROVIDER.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":955,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.240"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062558 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.payer_plan_period_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":956,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.241"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = person_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.person_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.person_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the person_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"person_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":957,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.242"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_start_date' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.payer_plan_period_start_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_start_date of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_start_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":958,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.243"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062474 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_plan_period_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_plan_period_end_date' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.payer_plan_period_end_date IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_end_date of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_plan_period_end_date","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":959,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.244"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.payer_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":960,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.245"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.payer_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":961,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.246"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.payer_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.payer_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":962,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.247"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078116 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.plan_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":963,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.248"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062494 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.plan_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":964,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.249"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.plan_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.plan_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the plan_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":965,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.250"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078090 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.sponsor_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":966,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.251"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062515 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.sponsor_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":967,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.252"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.sponsor_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.sponsor_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the sponsor_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":968,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.253"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062511 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = family_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.family_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.family_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the family_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"family_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":969,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.254"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062521 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.stop_reason_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":970,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.255"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.stop_reason_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_source_value of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":971,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.256"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_source_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PAYER_PLAN_PERIOD.stop_reason_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.stop_reason_source_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the stop_reason_source_concept_id of the PAYER_PLAN_PERIOD.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":972,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.257"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062471 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.cost_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":973,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.258"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_event_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_event_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.cost_event_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_event_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_event_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":974,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.259"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_domain_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_domain_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.cost_domain_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_domain_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_domain_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.cost_domain_id does not exist\n  Position: 373\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_cost_domain_id.txt","checkId":975,"FAILED":1,"THRESHOLD_VALUE":0,"_row":"8.260"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062495 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_type_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.cost_type_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the cost_type_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":976,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"8.261"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062510 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = currency_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.currency_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.currency_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the currency_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"currency_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":977,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.262"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = total_charge\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.total_charge' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.total_charge IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_charge of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_charge","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.total_charge does not exist\n  Position: 371\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_total_charge.txt","checkId":978,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.263"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = total_cost\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.total_cost' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.total_cost IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_cost of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_cost","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.total_cost does not exist\n  Position: 369\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_total_cost.txt","checkId":979,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.264"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = total_paid\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.total_paid' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.total_paid IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the total_paid of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"total_paid","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.total_paid does not exist\n  Position: 369\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_total_paid.txt","checkId":980,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.265"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_by_payer\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_by_payer' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_by_payer IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_payer of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_payer","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_by_payer does not exist\n  Position: 372\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_by_payer.txt","checkId":981,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.266"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_by_patient\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_by_patient' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_by_patient IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_patient of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_patient","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_by_patient does not exist\n  Position: 374\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_by_patient.txt","checkId":982,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.267"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_patient_copay\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_patient_copay' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_patient_copay IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_copay of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_copay","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_patient_copay does not exist\n  Position: 377\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_patient_copay.txt","checkId":983,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.268"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_patient_coinsurance\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_patient_coinsurance' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_patient_coinsurance IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_coinsurance of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_coinsurance","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_patient_coinsurance does not exist\n  Position: 383\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_patient_coinsurance.txt","checkId":984,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.269"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_patient_deductible\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_patient_deductible' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_patient_deductible IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_patient_deductible of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_patient_deductible","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_patient_deductible does not exist\n  Position: 382\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_patient_deductible.txt","checkId":985,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.270"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_by_primary\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_by_primary' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_by_primary IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_by_primary of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_by_primary","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_by_primary does not exist\n  Position: 374\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_by_primary.txt","checkId":986,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.271"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_ingredient_cost\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_ingredient_cost' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_ingredient_cost IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_ingredient_cost of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_ingredient_cost","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_ingredient_cost does not exist\n  Position: 379\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_ingredient_cost.txt","checkId":987,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.272"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = paid_dispensing_fee\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.paid_dispensing_fee' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.paid_dispensing_fee IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the paid_dispensing_fee of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"paid_dispensing_fee","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.paid_dispensing_fee does not exist\n  Position: 378\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_paid_dispensing_fee.txt","checkId":988,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.273"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = payer_plan_period_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.payer_plan_period_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.payer_plan_period_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the payer_plan_period_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"payer_plan_period_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":989,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.274"},{"QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = amount_allowed\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.amount_allowed' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.amount_allowed IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the amount_allowed of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"amount_allowed","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.amount_allowed does not exist\n  Position: 373\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_measureValueCompleteness_COST_amount_allowed.txt","checkId":990,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"8.275"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = revenue_code_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.revenue_code_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.revenue_code_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the revenue_code_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":991,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.276"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078131 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = revenue_code_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.revenue_code_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.revenue_code_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the revenue_code_source_value of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"revenue_code_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":992,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.277"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062528 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = drg_concept_id\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.drg_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.drg_concept_id IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drg_concept_id of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_concept_id","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":993,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.278"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062525 secs","QUERY_TEXT":"\n/*********\nMEASURE_VALUE_COMPLETENESS\nComputing number of null values and the proportion to total records per field\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = drg_source_value\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.drg_source_value' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.drg_source_value IS NULL\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"measureValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a NULL value in the drg_source_value of the COST.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"drg_source_value","SQL_FILE":"field_measure_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":994,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"8.279"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.gender_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field gender_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":995,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.1"},{"NUM_VIOLATED_ROWS":7175,"PCT_VIOLATED_ROWS":0.0628,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.109382 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.race_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field race_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":996,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.2"},{"NUM_VIOLATED_ROWS":7213,"PCT_VIOLATED_ROWS":0.0631,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093748 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.ethnicity_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field ethnicity_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":997,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = period_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.period_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION_PERIOD cdmTable\n\t\tWHERE cdmTable.period_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field period_type_concept_id in the OBSERVATION_PERIOD table.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"period_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":998,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.093754 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":999,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_type_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1000,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.6"},{"QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.admitting_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field admitting_source_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 410\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_standardConceptRecordCompleteness_VISIT_OCCURRENCE_admitting_source_concept_id.txt","checkId":1001,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"9.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.discharge_to_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field discharge_to_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1002,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1003,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_type_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1004,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_status_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_status_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field condition_status_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1005,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.11"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125000 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1006,"FAILED":1,"THRESHOLD_VALUE":5,"_row":"9.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125001 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field drug_type_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1007,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125001 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.route_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.route_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field route_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1008,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field procedure_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1009,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field procedure_type_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1010,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.16"},{"NUM_VIOLATED_ROWS":4611,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062417 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.modifier_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.modifier_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field modifier_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1011,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062473 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field device_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1012,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field device_type_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1013,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.156248 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field measurement_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1014,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093784 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field measurement_type_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1015,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.21"},{"NUM_VIOLATED_ROWS":73009,"PCT_VIOLATED_ROWS":0.7301,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.093722 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.unit_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1016,"FAILED":1,"THRESHOLD_VALUE":5,"_row":"9.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.156249 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_detail_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1017,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.234335 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field visit_detail_type_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1018,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.24"},{"QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.admitting_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field admitting_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 402\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_standardConceptRecordCompleteness_VISIT_DETAIL_admitting_source_concept_id.txt","checkId":1019,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"9.25"},{"NUM_VIOLATED_ROWS":1904,"PCT_VIOLATED_ROWS":0.2408,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.discharge_to_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.discharge_to_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field discharge_to_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1020,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field observation_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1021,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field observation_type_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1022,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.unit_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1023,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078114 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specimen_concept_id in the SPECIMEN table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1024,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062478 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.specimen_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specimen_type_concept_id in the SPECIMEN table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1025,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062445 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.unit_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.unit_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field unit_concept_id in the SPECIMEN table.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1026,"FAILED":0,"THRESHOLD_VALUE":5,"_row":"9.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_1\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_1' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.domain_concept_id_1 = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field domain_concept_id_1 in the FACT_RELATIONSHIP table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_1","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1027,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = domain_concept_id_2\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.domain_concept_id_2' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.domain_concept_id_2 = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field domain_concept_id_2 in the FACT_RELATIONSHIP table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"domain_concept_id_2","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1028,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = FACT_RELATIONSHIP\ncdmFieldName = relationship_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'FACT_RELATIONSHIP.relationship_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.FACT_RELATIONSHIP cdmTable\n\t\tWHERE cdmTable.relationship_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.FACT_RELATIONSHIP\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field relationship_concept_id in the FACT_RELATIONSHIP table.","CDM_TABLE_NAME":"FACT_RELATIONSHIP","CDM_FIELD_NAME":"relationship_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1029,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.35"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CARE_SITE\ncdmFieldName = place_of_service_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CARE_SITE.place_of_service_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CARE_SITE cdmTable\n\t\tWHERE cdmTable.place_of_service_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CARE_SITE\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field place_of_service_concept_id in the CARE_SITE table.","CDM_TABLE_NAME":"CARE_SITE","CDM_FIELD_NAME":"place_of_service_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1030,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.36"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.specialty_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field specialty_concept_id in the PROVIDER table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1031,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062489 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.gender_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.gender_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field gender_concept_id in the PROVIDER table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1032,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"9.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062506 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = COST\ncdmFieldName = cost_type_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'COST.cost_type_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.COST cdmTable\n\t\tWHERE cdmTable.cost_type_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.COST\n) denominator\n;\n","CHECK_NAME":"standardConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the standard concept field cost_type_concept_id in the COST table.","CDM_TABLE_NAME":"COST","CDM_FIELD_NAME":"cost_type_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1033,"FAILED":0,"THRESHOLD_VALUE":0,"_row":"9.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093765 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.gender_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.gender_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field gender_source_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1034,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.1"},{"NUM_VIOLATED_ROWS":7175,"PCT_VIOLATED_ROWS":0.0628,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093744 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.race_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.race_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field race_source_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1035,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.2"},{"NUM_VIOLATED_ROWS":7213,"PCT_VIOLATED_ROWS":0.0631,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093724 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.ethnicity_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.ethnicity_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field ethnicity_source_concept_id in the PERSON table.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1036,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.visit_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field visit_source_concept_id in the VISIT_OCCURRENCE table.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1037,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093762 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.condition_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field condition_source_concept_id in the CONDITION_OCCURRENCE table.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1038,"FAILED":0,"THRESHOLD_VALUE":10,"_row":"10.5"},{"NUM_VIOLATED_ROWS":274032,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140568 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.drug_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field drug_source_concept_id in the DRUG_EXPOSURE table.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1039,"FAILED":1,"THRESHOLD_VALUE":10,"_row":"10.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.procedure_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field procedure_source_concept_id in the PROCEDURE_OCCURRENCE table.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1040,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.device_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field device_source_concept_id in the DEVICE_EXPOSURE table.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1041,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":100001,"EXECUTION_TIME":"0.187517 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.measurement_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field measurement_source_concept_id in the MEASUREMENT table.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1042,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.203127 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.visit_detail_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field visit_detail_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1043,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.10"},{"QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.admitting_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.admitting_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field admitting_source_concept_id in the VISIT_DETAIL table.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_concept_id does not exist\n  Position: 402\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_sourceConceptRecordCompleteness_VISIT_DETAIL_admitting_source_concept_id.txt","checkId":1044,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"10.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.171864 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.observation_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field observation_source_concept_id in the OBSERVATION table.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1045,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"/*********\nCONCEPT_RECORD_COMPLETENESS\nnumber of 0s / total number of records\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_concept_id\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROVIDER.specialty_source_concept_id' AS violating_field, cdmTable.* \n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.specialty_source_concept_id = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"sourceConceptRecordCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value of 0 in the source concept field specialty_source_concept_id in the PROVIDER table.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_concept_id","SQL_FILE":"field_concept_record_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1046,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"10.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4,"EXECUTION_TIME":"0.156251 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = gender_source_value\nstandardConceptFieldName = GENDER_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PERSON.gender_source_value' AS violating_field, cdmTable.gender_source_value\n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.GENDER_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PERSON.gender_source_value) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the gender_source_value field of the PERSON table mapped to 0.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1047,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.1"},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.1111,"NUM_DENOMINATOR_ROWS":9,"EXECUTION_TIME":"0.156236 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = race_source_value\nstandardConceptFieldName = RACE_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PERSON.race_source_value' AS violating_field, cdmTable.race_source_value\n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.RACE_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PERSON.race_source_value) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the race_source_value field of the PERSON table mapped to 0.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"race_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1048,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.2"},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.0049,"NUM_DENOMINATOR_ROWS":205,"EXECUTION_TIME":"0.250000 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = ethnicity_source_value\nstandardConceptFieldName = ETHNICITY_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PERSON.ethnicity_source_value' AS violating_field, cdmTable.ethnicity_source_value\n\t\tFROM public.PERSON cdmTable\n\t\tWHERE cdmTable.ETHNICITY_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PERSON.ethnicity_source_value) AS num_rows\n\tFROM public.PERSON\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the ethnicity_source_value field of the PERSON table mapped to 0.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"ethnicity_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1049,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_source_value\nstandardConceptFieldName = VISIT_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.visit_source_value' AS violating_field, cdmTable.visit_source_value\n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.VISIT_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct VISIT_OCCURRENCE.visit_source_value) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the visit_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1050,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.4"},{"QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = admitting_source_value\nstandardConceptFieldName = ADMITTING_SOURCE_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.admitting_source_value' AS violating_field, cdmTable.admitting_source_value\n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.ADMITTING_SOURCE_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct VISIT_OCCURRENCE.admitting_source_value) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the admitting_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_value does not exist\n  Position: 354\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_sourceValueCompleteness_VISIT_OCCURRENCE_admitting_source_value.txt","checkId":1051,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"11.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":15,"EXECUTION_TIME":"0.078080 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = discharge_to_source_value\nstandardConceptFieldName = DISCHARGE_TO_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'VISIT_OCCURRENCE.discharge_to_source_value' AS violating_field, cdmTable.discharge_to_source_value\n\t\tFROM public.VISIT_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.DISCHARGE_TO_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct VISIT_OCCURRENCE.discharge_to_source_value) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the discharge_to_source_value field of the VISIT_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1052,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":6681,"EXECUTION_TIME":"0.453132 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_source_value\nstandardConceptFieldName = CONDITION_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'CONDITION_OCCURRENCE.condition_source_value' AS violating_field, cdmTable.condition_source_value\n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct CONDITION_OCCURRENCE.condition_source_value) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the condition_source_value field of the CONDITION_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1053,"FAILED":0,"THRESHOLD_VALUE":10,"_row":"11.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":13,"EXECUTION_TIME":"0.156253 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_status_source_value\nstandardConceptFieldName = CONDITION_STATUS_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'CONDITION_OCCURRENCE.condition_status_source_value' AS violating_field, cdmTable.condition_status_source_value\n\t\tFROM public.CONDITION_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.CONDITION_STATUS_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct CONDITION_OCCURRENCE.condition_status_source_value) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the condition_status_source_value field of the CONDITION_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_status_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1054,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.8"},{"NUM_VIOLATED_ROWS":1721,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":1721,"EXECUTION_TIME":"1.015669 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_source_value\nstandardConceptFieldName = DRUG_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'DRUG_EXPOSURE.drug_source_value' AS violating_field, cdmTable.drug_source_value\n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DRUG_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct DRUG_EXPOSURE.drug_source_value) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the drug_source_value field of the DRUG_EXPOSURE table mapped to 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1055,"FAILED":1,"THRESHOLD_VALUE":10,"_row":"11.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":20,"EXECUTION_TIME":"0.328087 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = route_source_value\nstandardConceptFieldName = ROUTE_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'DRUG_EXPOSURE.route_source_value' AS violating_field, cdmTable.route_source_value\n\t\tFROM public.DRUG_EXPOSURE cdmTable\n\t\tWHERE cdmTable.ROUTE_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct DRUG_EXPOSURE.route_source_value) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the route_source_value field of the DRUG_EXPOSURE table mapped to 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"route_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1056,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":872,"EXECUTION_TIME":"0.093753 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_source_value\nstandardConceptFieldName = PROCEDURE_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PROCEDURE_OCCURRENCE.procedure_source_value' AS violating_field, cdmTable.procedure_source_value\n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.PROCEDURE_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PROCEDURE_OCCURRENCE.procedure_source_value) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the procedure_source_value field of the PROCEDURE_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1057,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.11"},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":1,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062490 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = modifier_source_value\nstandardConceptFieldName = MODIFIER_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PROCEDURE_OCCURRENCE.modifier_source_value' AS violating_field, cdmTable.modifier_source_value\n\t\tFROM public.PROCEDURE_OCCURRENCE cdmTable\n\t\tWHERE cdmTable.MODIFIER_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PROCEDURE_OCCURRENCE.modifier_source_value) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the modifier_source_value field of the PROCEDURE_OCCURRENCE table mapped to 0.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"modifier_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1058,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078104 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_source_value\nstandardConceptFieldName = DEVICE_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'DEVICE_EXPOSURE.device_source_value' AS violating_field, cdmTable.device_source_value\n\t\tFROM public.DEVICE_EXPOSURE cdmTable\n\t\tWHERE cdmTable.DEVICE_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct DEVICE_EXPOSURE.device_source_value) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the device_source_value field of the DEVICE_EXPOSURE table mapped to 0.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1059,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":3779,"EXECUTION_TIME":"0.390625 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_source_value\nstandardConceptFieldName = MEASUREMENT_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'MEASUREMENT.measurement_source_value' AS violating_field, cdmTable.measurement_source_value\n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.MEASUREMENT_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct MEASUREMENT.measurement_source_value) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the measurement_source_value field of the MEASUREMENT table mapped to 0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1060,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.14"},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.0122,"NUM_DENOMINATOR_ROWS":82,"EXECUTION_TIME":"0.187455 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = unit_source_value\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'MEASUREMENT.unit_source_value' AS violating_field, cdmTable.unit_source_value\n\t\tFROM public.MEASUREMENT cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct MEASUREMENT.unit_source_value) AS num_rows\n\tFROM public.MEASUREMENT\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the MEASUREMENT table mapped to 0.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1061,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_source_value\nstandardConceptFieldName = VISIT_DETAIL_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'VISIT_DETAIL.visit_detail_source_value' AS violating_field, cdmTable.visit_detail_source_value\n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.VISIT_DETAIL_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct VISIT_DETAIL.visit_detail_source_value) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the visit_detail_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1062,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.16"},{"QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = admitting_source_value\nstandardConceptFieldName = ADMITTING_SOURCE_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'VISIT_DETAIL.admitting_source_value' AS violating_field, cdmTable.admitting_source_value\n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.ADMITTING_SOURCE_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct VISIT_DETAIL.admitting_source_value) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the admitting_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"admitting_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: column cdmtable.admitting_source_value does not exist\n  Position: 350\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_sourceValueCompleteness_VISIT_DETAIL_admitting_source_value.txt","checkId":1063,"FAILED":1,"THRESHOLD_VALUE":100,"_row":"11.17"},{"NUM_VIOLATED_ROWS":1,"PCT_VIOLATED_ROWS":0.5,"NUM_DENOMINATOR_ROWS":2,"EXECUTION_TIME":"0.078135 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = discharge_to_source_value\nstandardConceptFieldName = DISCHARGE_TO_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'VISIT_DETAIL.discharge_to_source_value' AS violating_field, cdmTable.discharge_to_source_value\n\t\tFROM public.VISIT_DETAIL cdmTable\n\t\tWHERE cdmTable.DISCHARGE_TO_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct VISIT_DETAIL.discharge_to_source_value) AS num_rows\n\tFROM public.VISIT_DETAIL\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the discharge_to_source_value field of the VISIT_DETAIL table mapped to 0.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"discharge_to_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1064,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":1,"EXECUTION_TIME":"0.062492 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_source_value\nstandardConceptFieldName = OBSERVATION_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'OBSERVATION.observation_source_value' AS violating_field, cdmTable.observation_source_value\n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.OBSERVATION_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct OBSERVATION.observation_source_value) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the observation_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1065,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = unit_source_value\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'OBSERVATION.unit_source_value' AS violating_field, cdmTable.unit_source_value\n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct OBSERVATION.unit_source_value) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1066,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062509 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = qualifier_source_value\nstandardConceptFieldName = QUALIFIER_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'OBSERVATION.qualifier_source_value' AS violating_field, cdmTable.qualifier_source_value\n\t\tFROM public.OBSERVATION cdmTable\n\t\tWHERE cdmTable.QUALIFIER_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct OBSERVATION.qualifier_source_value) AS num_rows\n\tFROM public.OBSERVATION\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the qualifier_source_value field of the OBSERVATION table mapped to 0.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"qualifier_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1067,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_source_value\nstandardConceptFieldName = SPECIMEN_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'SPECIMEN.specimen_source_value' AS violating_field, cdmTable.specimen_source_value\n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.SPECIMEN_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct SPECIMEN.specimen_source_value) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the specimen_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1068,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = unit_source_value\nstandardConceptFieldName = UNIT_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'SPECIMEN.unit_source_value' AS violating_field, cdmTable.unit_source_value\n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.UNIT_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct SPECIMEN.unit_source_value) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the unit_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"unit_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1069,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062517 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = anatomic_site_source_value\nstandardConceptFieldName = ANATOMIC_SITE_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'SPECIMEN.anatomic_site_source_value' AS violating_field, cdmTable.anatomic_site_source_value\n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.ANATOMIC_SITE_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct SPECIMEN.anatomic_site_source_value) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the anatomic_site_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"anatomic_site_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1070,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = disease_status_source_value\nstandardConceptFieldName = DISEASE_STATUS_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'SPECIMEN.disease_status_source_value' AS violating_field, cdmTable.disease_status_source_value\n\t\tFROM public.SPECIMEN cdmTable\n\t\tWHERE cdmTable.DISEASE_STATUS_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct SPECIMEN.disease_status_source_value) AS num_rows\n\tFROM public.SPECIMEN\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the disease_status_source_value field of the SPECIMEN table mapped to 0.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"disease_status_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1071,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.25"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078145 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = specialty_source_value\nstandardConceptFieldName = SPECIALTY_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PROVIDER.specialty_source_value' AS violating_field, cdmTable.specialty_source_value\n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.SPECIALTY_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PROVIDER.specialty_source_value) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the specialty_source_value field of the PROVIDER table mapped to 0.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"specialty_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1072,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062483 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROVIDER\ncdmFieldName = gender_source_value\nstandardConceptFieldName = GENDER_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PROVIDER.gender_source_value' AS violating_field, cdmTable.gender_source_value\n\t\tFROM public.PROVIDER cdmTable\n\t\tWHERE cdmTable.GENDER_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PROVIDER.gender_source_value) AS num_rows\n\tFROM public.PROVIDER\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the gender_source_value field of the PROVIDER table mapped to 0.","CDM_TABLE_NAME":"PROVIDER","CDM_FIELD_NAME":"gender_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1073,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = payer_source_value\nstandardConceptFieldName = PAYER_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.payer_source_value' AS violating_field, cdmTable.payer_source_value\n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PAYER_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PAYER_PLAN_PERIOD.payer_source_value) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the payer_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"payer_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1074,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = plan_source_value\nstandardConceptFieldName = PLAN_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.plan_source_value' AS violating_field, cdmTable.plan_source_value\n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.PLAN_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PAYER_PLAN_PERIOD.plan_source_value) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the plan_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"plan_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1075,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = sponsor_source_value\nstandardConceptFieldName = SPONSOR_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.sponsor_source_value' AS violating_field, cdmTable.sponsor_source_value\n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.SPONSOR_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PAYER_PLAN_PERIOD.sponsor_source_value) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the sponsor_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"sponsor_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1076,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"/*********\nSOURCE_VALUE_COMPLETENESS\nnumber of source values with 0 standard concept / number of distinct source values\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PAYER_PLAN_PERIOD\ncdmFieldName = stop_reason_source_value\nstandardConceptFieldName = STOP_REASON_CONCEPT_ID\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT DISTINCT 'PAYER_PLAN_PERIOD.stop_reason_source_value' AS violating_field, cdmTable.stop_reason_source_value\n\t\tFROM public.PAYER_PLAN_PERIOD cdmTable\n\t\tWHERE cdmTable.STOP_REASON_CONCEPT_ID = 0\n\t) violated_rows\n) violated_row_count,\n( \n\tSELECT COUNT(distinct PAYER_PLAN_PERIOD.stop_reason_source_value) AS num_rows\n\tFROM public.PAYER_PLAN_PERIOD\n) denominator\n;\n","CHECK_NAME":"sourceValueCompleteness","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of distinct source values in the stop_reason_source_value field of the PAYER_PLAN_PERIOD table mapped to 0.","CDM_TABLE_NAME":"PAYER_PLAN_PERIOD","CDM_FIELD_NAME":"stop_reason_source_value","SQL_FILE":"field_source_value_completeness.sql","CATEGORY":"Completeness","SUBCATEGORY":"","CONTEXT":"Verification","checkId":1077,"FAILED":0,"THRESHOLD_VALUE":100,"_row":"11.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078122 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = year_of_birth\nplausibleValueLow = 1850\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, cdmTable.*\n\t\tfrom public.PERSON cdmTable\n    where cdmTable.year_of_birth < 1850\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n\twhere year_of_birth is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the year_of_birth field of the PERSON table less than 1850.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1078,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = month_of_birth\nplausibleValueLow = 1\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, cdmTable.*\n\t\tfrom public.PERSON cdmTable\n    where cdmTable.month_of_birth < 1\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n\twhere month_of_birth is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the month_of_birth field of the PERSON table less than 1.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1079,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093718 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = day_of_birth\nplausibleValueLow = 1\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, cdmTable.*\n\t\tfrom public.PERSON cdmTable\n    where cdmTable.day_of_birth < 1\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n\twhere day_of_birth is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the day_of_birth field of the PERSON table less than 1.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1080,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = birth_datetime\nplausibleValueLow = '1850-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.PERSON cdmTable\n    where cdmTable.birth_datetime < '1850-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n\twhere birth_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the birth_datetime field of the PERSON table less than '1850-01-01'.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1081,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_start_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, cdmTable.*\n\t\tfrom public.OBSERVATION_PERIOD cdmTable\n    where cdmTable.observation_period_start_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n\twhere observation_period_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1082,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062461 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_end_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, cdmTable.*\n\t\tfrom public.OBSERVATION_PERIOD cdmTable\n    where cdmTable.observation_period_end_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n\twhere observation_period_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1083,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078116 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_start_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere visit_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1084,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078119 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_start_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere visit_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1085,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_end_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere visit_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1086,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_end_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere visit_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1087,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093736 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, cdmTable.*\n\t\tfrom public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_start_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere condition_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1088,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.093744 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_start_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere condition_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1089,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078130 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, cdmTable.*\n\t\tfrom public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_end_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere condition_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1090,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093750 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_end_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere condition_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1091,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.125049 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_start_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere drug_exposure_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1092,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.125036 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_start_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere drug_exposure_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1093,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.125007 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_end_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere drug_exposure_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1094,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.140659 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_end_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere drug_exposure_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1095,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.125004 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = verbatim_end_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.verbatim_end_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere verbatim_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1096,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.124998 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = refills\nplausibleValueLow = 0\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.refills < 0\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere refills is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the refills field of the DRUG_EXPOSURE table less than 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1097,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.124998 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = quantity\nplausibleValueLow = 0\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.quantity < 0\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere quantity is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DRUG_EXPOSURE table less than 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1098,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.250000 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = days_supply\nplausibleValueLow = 0\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, cdmTable.*\n\t\tfrom public.DRUG_EXPOSURE cdmTable\n    where cdmTable.days_supply < 0\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere days_supply is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the days_supply field of the DRUG_EXPOSURE table less than 0.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1099,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.156252 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, cdmTable.*\n\t\tfrom public.PROCEDURE_OCCURRENCE cdmTable\n    where cdmTable.procedure_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n\twhere procedure_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1100,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.078129 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.PROCEDURE_OCCURRENCE cdmTable\n    where cdmTable.procedure_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n\twhere procedure_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table less than '1950-01-01'.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1101,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062518 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = quantity\nplausibleValueLow = 1\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.quantity' AS violating_field, cdmTable.*\n\t\tfrom public.PROCEDURE_OCCURRENCE cdmTable\n    where cdmTable.quantity < 1\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n\twhere quantity is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the PROCEDURE_OCCURRENCE table less than 1.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1102,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.25"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, cdmTable.*\n\t\tfrom public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_start_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere device_exposure_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1103,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078108 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_start_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere device_exposure_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1104,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078128 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, cdmTable.*\n\t\tfrom public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_end_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere device_exposure_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1105,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_end_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere device_exposure_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table less than '1950-01-01'.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1106,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062454 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = quantity\nplausibleValueLow = 1\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.quantity' AS violating_field, cdmTable.*\n\t\tfrom public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.quantity < 1\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere quantity is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DEVICE_EXPOSURE table less than 1.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1107,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093775 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, cdmTable.*\n\t\tfrom public.MEASUREMENT cdmTable\n    where cdmTable.measurement_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n\twhere measurement_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT table less than '1950-01-01'.","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1108,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062501 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_start_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere visit_detail_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1109,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.078127 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_start_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere visit_detail_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1110,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078121 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_end_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere visit_detail_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1111,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062533 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_end_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere visit_detail_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL table less than '1950-01-01'.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1112,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.35"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.109374 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_date' AS violating_field, cdmTable.*\n\t\tfrom public.NOTE cdmTable\n    where cdmTable.note_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n\twhere note_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE table less than '1950-01-01'.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1113,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.36"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078216 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.NOTE cdmTable\n    where cdmTable.note_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n\twhere note_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE table less than '1950-01-01'.","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1114,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078122 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.NOTE_NLP cdmTable\n    where cdmTable.nlp_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n\twhere nlp_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the nlp_datetime field of the NOTE_NLP table less than '1950-01-01'.","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1115,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078148 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, cdmTable.*\n\t\tfrom public.OBSERVATION cdmTable\n    where cdmTable.observation_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n\twhere observation_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1116,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.078087 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.OBSERVATION cdmTable\n    where cdmTable.observation_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n\twhere observation_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION table less than '1950-01-01'.","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1117,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.40"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062500 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_date\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, cdmTable.*\n\t\tfrom public.SPECIMEN cdmTable\n    where cdmTable.specimen_date < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n\twhere specimen_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN table less than '1950-01-01'.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1118,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.41"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062493 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_datetime\nplausibleValueLow = '1950-01-01'\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, cdmTable.*\n\t\tfrom public.SPECIMEN cdmTable\n    where cdmTable.specimen_datetime < '1950-01-01'\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n\twhere specimen_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN table less than '1950-01-01'.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1119,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.42"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062502 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_LOW\nget number of records and the proportion to total number of eligible records that fall below this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = quantity\nplausibleValueLow = 1\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.quantity' AS violating_field, cdmTable.*\n\t\tfrom public.SPECIMEN cdmTable\n    where cdmTable.quantity < 1\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n\twhere quantity is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueLow","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the SPECIMEN table less than 1.","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_low.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1120,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"12.43"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.109375 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = year_of_birth\nplausibleValueHigh = YEAR(GETDATE())+1\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.year_of_birth' AS violating_field, cdmTable.*\n    from public.PERSON cdmTable\n    where cdmTable.year_of_birth > EXTRACT(YEAR FROM CURRENT_DATE)+1\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n  where year_of_birth is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the year_of_birth field of the PERSON table greater than YEAR(GETDATE())+1.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"year_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1121,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.1"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":114306,"EXECUTION_TIME":"0.093752 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = month_of_birth\nplausibleValueHigh = 12\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.month_of_birth' AS violating_field, cdmTable.*\n    from public.PERSON cdmTable\n    where cdmTable.month_of_birth > 12\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n  where month_of_birth is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the month_of_birth field of the PERSON table greater than 12.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"month_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1122,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.2"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.093749 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = day_of_birth\nplausibleValueHigh = 31\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.day_of_birth' AS violating_field, cdmTable.*\n    from public.PERSON cdmTable\n    where cdmTable.day_of_birth > 31\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n  where day_of_birth is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the day_of_birth field of the PERSON table greater than 31.","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"day_of_birth","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1123,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.3"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.124959 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PERSON\ncdmFieldName = birth_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PERSON.birth_datetime' AS violating_field, cdmTable.*\n    from public.PERSON cdmTable\n    where cdmTable.birth_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PERSON\n  where birth_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the birth_datetime field of the PERSON table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"PERSON","CDM_FIELD_NAME":"birth_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1124,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.4"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_start_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, cdmTable.*\n    from public.OBSERVATION_PERIOD cdmTable\n    where cdmTable.observation_period_start_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n  where observation_period_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_start_date field of the OBSERVATION_PERIOD table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1125,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.5"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062497 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_end_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, cdmTable.*\n    from public.OBSERVATION_PERIOD cdmTable\n    where cdmTable.observation_period_end_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n  where observation_period_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_period_end_date field of the OBSERVATION_PERIOD table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1126,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.6"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078101 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_start_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n  where visit_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_date field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1127,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.7"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.093751 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_start_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n  where visit_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_start_datetime field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1128,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.8"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062498 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_end_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n  where visit_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_date field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1129,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.9"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":11124,"EXECUTION_TIME":"0.078123 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    where cdmTable.visit_end_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n  where visit_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_end_datetime field of the VISIT_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1130,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.10"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.125000 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_start_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n  where condition_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_date field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1131,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.11"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":98903,"EXECUTION_TIME":"0.109353 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_start_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n  where condition_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_start_datetime field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1132,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.12"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.109363 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_end_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n  where condition_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_date field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1133,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.13"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.109374 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    where cdmTable.condition_end_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n  where condition_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the condition_end_datetime field of the CONDITION_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1134,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.14"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.187444 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_start_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where drug_exposure_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_date field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1135,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.15"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.203108 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_start_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where drug_exposure_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1136,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.16"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.187496 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_end_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where drug_exposure_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_date field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1137,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.17"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":274032,"EXECUTION_TIME":"0.203132 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.drug_exposure_end_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where drug_exposure_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1138,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.18"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.187458 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = verbatim_end_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.verbatim_end_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where verbatim_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the verbatim_end_date field of the DRUG_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1139,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.19"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.124957 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = refills\nplausibleValueHigh = 12\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.refills' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.refills > 12\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where refills is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the refills field of the DRUG_EXPOSURE table greater than 12.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"refills","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1140,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.20"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.124983 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = quantity\nplausibleValueHigh = 1095\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.quantity' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.quantity > 1095\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where quantity is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the quantity field of the DRUG_EXPOSURE table greater than 1095.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"quantity","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1141,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.21"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.124995 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = days_supply\nplausibleValueHigh = 365\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.days_supply' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    where cdmTable.days_supply > 365\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n  where days_supply is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the days_supply field of the DRUG_EXPOSURE table greater than 365.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"days_supply","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1142,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.22"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062467 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, cdmTable.*\n    from public.PROCEDURE_OCCURRENCE cdmTable\n    where cdmTable.procedure_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n  where procedure_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_date field of the PROCEDURE_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1143,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.23"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":4611,"EXECUTION_TIME":"0.062429 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, cdmTable.*\n    from public.PROCEDURE_OCCURRENCE cdmTable\n    where cdmTable.procedure_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n  where procedure_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1144,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.24"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078126 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_start_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n  where device_exposure_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_date field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1145,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.25"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062507 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_start_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n  where device_exposure_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1146,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.26"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062505 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_end_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n  where device_exposure_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_date field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1147,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.27"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062453 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    where cdmTable.device_exposure_end_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n  where device_exposure_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1148,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.28"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.109387 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = MEASUREMENT\ncdmFieldName = measurement_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'MEASUREMENT.measurement_date' AS violating_field, cdmTable.*\n    from public.MEASUREMENT cdmTable\n    where cdmTable.measurement_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.MEASUREMENT\n  where measurement_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the measurement_date field of the MEASUREMENT table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"MEASUREMENT","CDM_FIELD_NAME":"measurement_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1149,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.29"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078125 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_start_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n  where visit_detail_start_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_date field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1150,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.30"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.124993 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_start_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n  where visit_detail_start_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_start_datetime field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1151,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.31"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062496 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_end_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n  where visit_detail_end_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_date field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1152,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.32"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":7908,"EXECUTION_TIME":"0.062504 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    where cdmTable.visit_detail_end_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n  where visit_detail_end_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the visit_detail_end_datetime field of the VISIT_DETAIL table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1153,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.33"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062499 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_date' AS violating_field, cdmTable.*\n    from public.NOTE cdmTable\n    where cdmTable.note_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n  where note_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_date field of the NOTE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1154,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.34"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078124 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE\ncdmFieldName = note_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE.note_datetime' AS violating_field, cdmTable.*\n    from public.NOTE cdmTable\n    where cdmTable.note_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE\n  where note_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the note_datetime field of the NOTE table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"NOTE","CDM_FIELD_NAME":"note_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1155,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.35"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062503 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = NOTE_NLP\ncdmFieldName = nlp_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'NOTE_NLP.nlp_datetime' AS violating_field, cdmTable.*\n    from public.NOTE_NLP cdmTable\n    where cdmTable.nlp_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.NOTE_NLP\n  where nlp_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the nlp_datetime field of the NOTE_NLP table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"NOTE_NLP","CDM_FIELD_NAME":"nlp_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1156,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.36"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.078120 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_date' AS violating_field, cdmTable.*\n    from public.OBSERVATION cdmTable\n    where cdmTable.observation_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n  where observation_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_date field of the OBSERVATION table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1157,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.37"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":2937,"EXECUTION_TIME":"0.124978 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION\ncdmFieldName = observation_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION.observation_datetime' AS violating_field, cdmTable.*\n    from public.OBSERVATION cdmTable\n    where cdmTable.observation_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION\n  where observation_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the observation_datetime field of the OBSERVATION table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"OBSERVATION","CDM_FIELD_NAME":"observation_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1158,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.38"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.109402 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_date\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_date' AS violating_field, cdmTable.*\n    from public.SPECIMEN cdmTable\n    where cdmTable.specimen_date > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n  where specimen_date is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_date field of the SPECIMEN table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_date","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1159,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.39"},{"NUM_VIOLATED_ROWS":0,"PCT_VIOLATED_ROWS":0,"NUM_DENOMINATOR_ROWS":0,"EXECUTION_TIME":"0.062482 secs","QUERY_TEXT":"\n/*********\nPLAUSIBLE_VALUE_HIGH\nget number of records and the proportion to total number of eligible records that exceed this threshold\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = SPECIMEN\ncdmFieldName = specimen_datetime\nplausibleValueHigh = DATEADD(dd,1,GETDATE())\n**********/\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'SPECIMEN.specimen_datetime' AS violating_field, cdmTable.*\n    from public.SPECIMEN cdmTable\n    where cdmTable.specimen_datetime > (CURRENT_DATE + 1*INTERVAL'1 day')\n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.SPECIMEN\n  where specimen_datetime is not null\n) denominator\n;\n","CHECK_NAME":"plausibleValueHigh","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"The number and percent of records with a value in the specimen_datetime field of the SPECIMEN table greater than DATEADD(dd,1,GETDATE()).","CDM_TABLE_NAME":"SPECIMEN","CDM_FIELD_NAME":"specimen_datetime","SQL_FILE":"field_plausible_value_high.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Atemporal","CONTEXT":"Verification","checkId":1160,"FAILED":0,"THRESHOLD_VALUE":1,"_row":"13.40"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_start_date' AS violating_field, cdmTable.*\n    from public.OBSERVATION_PERIOD cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.observation_period_start_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the observation_period_start_date field of the OBSERVATION_PERIOD table that occurs after death.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 418\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_OBSERVATION_PERIOD_observation_period_start_date.txt","checkId":1161,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.1"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = OBSERVATION_PERIOD\ncdmFieldName = observation_period_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'OBSERVATION_PERIOD.observation_period_end_date' AS violating_field, cdmTable.*\n    from public.OBSERVATION_PERIOD cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.observation_period_end_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.OBSERVATION_PERIOD\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the observation_period_end_date field of the OBSERVATION_PERIOD table that occurs after death.","CDM_TABLE_NAME":"OBSERVATION_PERIOD","CDM_FIELD_NAME":"observation_period_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 416\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_OBSERVATION_PERIOD_observation_period_end_date.txt","checkId":1162,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.2"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_date' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_start_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_start_date field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 401\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_OCCURRENCE_visit_start_date.txt","checkId":1163,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.3"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_start_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_start_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_start_datetime field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 405\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_OCCURRENCE_visit_start_datetime.txt","checkId":1164,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.4"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_date' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_end_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_end_date field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 399\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_OCCURRENCE_visit_end_date.txt","checkId":1165,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.5"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_OCCURRENCE\ncdmFieldName = visit_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_OCCURRENCE.visit_end_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_end_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_end_datetime field of the VISIT_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"VISIT_OCCURRENCE","CDM_FIELD_NAME":"visit_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 403\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_OCCURRENCE_visit_end_datetime.txt","checkId":1166,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.6"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_date' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.condition_start_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_start_date field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 413\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_CONDITION_OCCURRENCE_condition_start_date.txt","checkId":1167,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.7"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_start_datetime' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.condition_start_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_start_datetime field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 417\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_CONDITION_OCCURRENCE_condition_start_datetime.txt","checkId":1168,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.8"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_date' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.condition_end_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_end_date field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 411\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_CONDITION_OCCURRENCE_condition_end_date.txt","checkId":1169,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.9"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = CONDITION_OCCURRENCE\ncdmFieldName = condition_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'CONDITION_OCCURRENCE.condition_end_datetime' AS violating_field, cdmTable.*\n    from public.CONDITION_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.condition_end_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.CONDITION_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the condition_end_datetime field of the CONDITION_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"CONDITION_OCCURRENCE","CDM_FIELD_NAME":"condition_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 415\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_CONDITION_OCCURRENCE_condition_end_datetime.txt","checkId":1170,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.10"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_date' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.drug_exposure_start_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_start_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 403\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DRUG_EXPOSURE_drug_exposure_start_date.txt","checkId":1171,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.11"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_start_datetime' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.drug_exposure_start_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_start_datetime field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 407\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DRUG_EXPOSURE_drug_exposure_start_datetime.txt","checkId":1172,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.12"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_date' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.drug_exposure_end_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_end_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 401\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DRUG_EXPOSURE_drug_exposure_end_date.txt","checkId":1173,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.13"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = drug_exposure_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.drug_exposure_end_datetime' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.drug_exposure_end_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the drug_exposure_end_datetime field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"drug_exposure_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 405\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DRUG_EXPOSURE_drug_exposure_end_datetime.txt","checkId":1174,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.14"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DRUG_EXPOSURE\ncdmFieldName = verbatim_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DRUG_EXPOSURE.verbatim_end_date' AS violating_field, cdmTable.*\n    from public.DRUG_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.verbatim_end_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DRUG_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the verbatim_end_date field of the DRUG_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DRUG_EXPOSURE","CDM_FIELD_NAME":"verbatim_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 396\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DRUG_EXPOSURE_verbatim_end_date.txt","checkId":1175,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.15"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_date' AS violating_field, cdmTable.*\n    from public.PROCEDURE_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.procedure_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the procedure_date field of the PROCEDURE_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 407\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_PROCEDURE_OCCURRENCE_procedure_date.txt","checkId":1176,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.16"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = PROCEDURE_OCCURRENCE\ncdmFieldName = procedure_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'PROCEDURE_OCCURRENCE.procedure_datetime' AS violating_field, cdmTable.*\n    from public.PROCEDURE_OCCURRENCE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.procedure_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.PROCEDURE_OCCURRENCE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the procedure_datetime field of the PROCEDURE_OCCURRENCE table that occurs after death.","CDM_TABLE_NAME":"PROCEDURE_OCCURRENCE","CDM_FIELD_NAME":"procedure_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 411\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_PROCEDURE_OCCURRENCE_procedure_datetime.txt","checkId":1177,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.17"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_date' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.device_exposure_start_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_start_date field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 409\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DEVICE_EXPOSURE_device_exposure_start_date.txt","checkId":1178,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.18"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_start_datetime' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.device_exposure_start_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_start_datetime field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 413\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DEVICE_EXPOSURE_device_exposure_start_datetime.txt","checkId":1179,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.19"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_date' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.device_exposure_end_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_end_date field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 407\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DEVICE_EXPOSURE_device_exposure_end_date.txt","checkId":1180,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.20"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = DEVICE_EXPOSURE\ncdmFieldName = device_exposure_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'DEVICE_EXPOSURE.device_exposure_end_datetime' AS violating_field, cdmTable.*\n    from public.DEVICE_EXPOSURE cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.device_exposure_end_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.DEVICE_EXPOSURE\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the device_exposure_end_datetime field of the DEVICE_EXPOSURE table that occurs after death.","CDM_TABLE_NAME":"DEVICE_EXPOSURE","CDM_FIELD_NAME":"device_exposure_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 411\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_DEVICE_EXPOSURE_device_exposure_end_datetime.txt","checkId":1181,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.21"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_date' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_detail_start_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_start_date field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 400\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_DETAIL_visit_detail_start_date.txt","checkId":1182,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.22"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_start_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_start_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_detail_start_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_start_datetime field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_start_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 404\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_DETAIL_visit_detail_start_datetime.txt","checkId":1183,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.23"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_date\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_date' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_detail_end_date as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_end_date field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_date","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 398\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_DETAIL_visit_detail_end_date.txt","checkId":1184,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.24"},{"QUERY_TEXT":"\n/*********\nPLAUSIBLE_DURING_LIFE\nget number of events that occur after death event (PLAUSIBLE_DURING_LIFE == Yes)\n\nParameters used in this template:\ncdmDatabaseSchema = public\ncdmTableName = VISIT_DETAIL\ncdmFieldName = visit_detail_end_datetime\n**********/\n\n\nSELECT num_violated_rows, CASE WHEN denominator.num_rows = 0 THEN 0 ELSE 1.0*num_violated_rows/denominator.num_rows END  AS pct_violated_rows, \n  denominator.num_rows as num_denominator_rows\nFROM\n(\n\tSELECT COUNT(violated_rows.violating_field) AS num_violated_rows\n\tFROM\n\t(\n\t\tSELECT 'VISIT_DETAIL.visit_detail_end_datetime' AS violating_field, cdmTable.*\n    from public.VISIT_DETAIL cdmTable\n    join public.death de on cdmTable.person_id = de.person_id\n    where cast(cdmTable.visit_detail_end_datetime as date) > (cast(de.death_date as date) + 60*INTERVAL'1 day') \n\t) violated_rows\n) violated_row_count,\n(\n\tSELECT COUNT(*) AS num_rows\n\tFROM public.VISIT_DETAIL\n\twhere person_id in\n\t( select person_id from public.death )\n) denominator\n;\n","CHECK_NAME":"plausibleDuringLife","CHECK_LEVEL":"FIELD","CHECK_DESCRIPTION":"If yes, the number and percent of records with a date value in the visit_detail_end_datetime field of the VISIT_DETAIL table that occurs after death.","CDM_TABLE_NAME":"VISIT_DETAIL","CDM_FIELD_NAME":"visit_detail_end_datetime","SQL_FILE":"field_plausible_during_life.sql","CATEGORY":"Plausibility","SUBCATEGORY":"Temporal","CONTEXT":"Verification","ERROR":"Error executing SQL:\norg.postgresql.util.PSQLException: ERROR: relation \"public.death\" does not exist\n  Position: 402\nAn error report has been created at  D:/Users/hungd/Documents/OMOP_CDM/git_folders/DataQualityDashboard-master/output/flag_dream/errors/FIELD_plausibleDuringLife_VISIT_DETAIL_visit_detail_end_datetime.txt","checkId":1185,"FAILED":1,"THRESHOLD_VALUE":1,"_row":"14.25"}],"Metadata":[{"CDM_SOURCE_NAME":"dream","CDM_SOURCE_ABBREVIATION":"dream","CDM_HOLDER":"dream","SOURCE_DESCRIPTION":"dream","SOURCE_DOCUMENTATION_REFERENCE":"dream","CDM_ETL_REFERENCE":"dream","SOURCE_RELEASE_DATE":"2019-09-01","CDM_RELEASE_DATE":"2019-09-01","CDM_VERSION":"6.0","VOCABULARY_VERSION":"icd+snomed","DQD_VERSION":"1.0.0"}],"Overview":{"countTotal":[1185],"countPassed":[1039],"countErrorFailed":[73],"countThresholdFailed":[73],"countOverallFailed":[146],"percentPassed":[88],"percentFailed":[12],"countTotalPlausibility":[108],"countTotalConformance":[715],"countTotalCompleteness":[362],"countFailedPlausibility":[25],"countFailedConformance":[85],"countFailedCompleteness":[36],"countPassedPlausibility":[83],"countPassedConformance":[630],"countPassedCompleteness":[326]}}
